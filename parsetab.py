
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADD_ASSIGN AND_ASSIGN AND_OP AUTO BOOL BREAK CASE CHAR COMPLEX CONST CONSTANT CONTINUE DEC_OP DEFAULT DIV_ASSIGN DO DOUBLE ELLIPSIS ELSE ENUM EQ_OP EXTERN FLOAT FOR GE_OP GOTO IDENTIFIER IF IMAGINARY INC_OP INLINE INT LEFT_ASSIGN LEFT_OP LE_OP LONG MACRO MOD_ASSIGN MUL_ASSIGN NE_OP OR_ASSIGN OR_OP PTR_OP REGISTER RESTRICT RETURN RIGHT_ASSIGN RIGHT_OP SHORT SIGNED SIZEOF STATIC STRING_LITERAL STRUCT SUB_ASSIGN SWITCH TYPEDEF UNION UNSIGNED VOID VOLATILE WHILE XOR_ASSIGN translation_unit : external_declaration\n                         | translation_unit external_declaration  external_declaration : function_definition\n                             | declaration\n                             | macro  macro : MACRO IDENTIFIER IDENTIFIER constant_expression\n              | MACRO IDENTIFIER \'<\' headfile \'>\'\n              | MACRO IDENTIFIER \'"\' headfile \'"\'  headfile : IDENTIFIER \'.\' IDENTIFIER\n                 | IDENTIFIER  declaration : declaration_specifiers \';\'\n                    | declaration_specifiers init_declarator_list \';\'  init_declarator_list : init_declarator\n                             | init_declarator_list \',\' init_declarator  init_declarator : declarator\n                        | declarator \'=\' initializer  declaration_specifiers \t: storage_class_specifier\n                                | storage_class_specifier declaration_specifiers\n                                | type_specifier\n                                | type_specifier declaration_specifiers\n                                | type_qualifier\n                                | type_qualifier declaration_specifiers\n                                | function_specifier\n                                | function_specifier declaration_specifiers  storage_class_specifier : TYPEDEF\n                                | EXTERN\n                                | STATIC\n                                | AUTO\n                                | REGISTER  function_specifier : INLINE  type_specifier : VOID\n                       | CHAR\n                       | SHORT\n                       | INT\n                       | LONG\n                       | FLOAT\n                       | DOUBLE\n                       | SIGNED\n                       | UNSIGNED\n                       | BOOL\n                       | struct_or_union_specifier\n                       | enum_specifier  type_qualifier : CONST\n                       | RESTRICT\n                       | VOLATILE  enum_specifier : ENUM \'{\' enumerator_list \'}\'\n                        | ENUM IDENTIFIER \'{\' enumerator_list \'}\'\n                        | ENUM \'{\' enumerator_list \',\' \'}\'\n                        | ENUM IDENTIFIER \'{\' enumerator_list \',\' \'}\'\n                        | ENUM IDENTIFIER  enumerator_list : enumerator\n                        | enumerator_list \',\' enumerator  enumerator : IDENTIFIER\n                   | IDENTIFIER \'=\' constant_expression  struct_or_union_specifier : struct_or_union IDENTIFIER \'{\' struct_declaration_list \'}\'\n                                  | struct_or_union \'{\' struct_declaration_list \'}\'\n                                  | struct_or_union IDENTIFIER  struct_or_union : STRUCT\n                        | UNION  struct_declaration_list : struct_declaration\n                                | struct_declaration_list struct_declaration  struct_declaration : specifier_qualifier_list struct_declarator_list \';\'  specifier_qualifier_list : type_specifier specifier_qualifier_list\n                                 | type_specifier\n                                 | type_qualifier specifier_qualifier_list\n                                 | type_qualifier   struct_declarator_list : struct_declarator\n                               | struct_declarator_list \',\' struct_declarator  struct_declarator : declarator\n                          | \':\' constant_expression\n                          | declarator \':\' constant_expression  declarator : pointer direct_declarator\n                   | direct_declarator  pointer : \'*\'\n                | \'*\' type_qualifier_list\n                | \'*\' pointer\n                | \'*\' type_qualifier_list pointer  type_qualifier_list : type_qualifier\n                            | type_qualifier_list type_qualifier  direct_declarator : IDENTIFIER\n                        | \'(\' declarator \')\'\n                        | direct_declarator \'[\' type_qualifier_list assignment_expression \']\'\n                        | direct_declarator \'[\' type_qualifier_list \']\'\n                        | direct_declarator \'[\' assignment_expression \']\'\n                        | direct_declarator \'[\' STATIC type_qualifier_list assignment_expression \']\'\n                        | direct_declarator \'[\' type_qualifier_list STATIC assignment_expression \']\'\n                        | direct_declarator \'[\' type_qualifier_list \'*\' \']\'\n                        | direct_declarator \'[\' \'*\' \']\'\n                        | direct_declarator \'[\' \']\'\n                        | direct_declarator \'(\' parameter_type_list \')\'\n                        | direct_declarator \'(\' identifier_list \')\'\n                        | direct_declarator \'(\' \')\'  identifier_list : IDENTIFIER\n                        | identifier_list \',\' IDENTIFIER  assignment_expression : conditional_expression\n                              | unary_expression assignment_operator assignment_expression  assignment_operator : \'=\'\n                            | MUL_ASSIGN\n                            | DIV_ASSIGN\n                            | MOD_ASSIGN\n                            | ADD_ASSIGN\n                            | SUB_ASSIGN\n                            | LEFT_ASSIGN\n                            | RIGHT_ASSIGN\n                            | AND_ASSIGN\n                            | XOR_ASSIGN\n                            | OR_ASSIGN  constant_expression : conditional_expression  conditional_expression : logical_or_expression\n                               | logical_or_expression \'?\' expression \':\' conditional_expression  logical_or_expression : logical_and_expression\n                              | logical_or_expression OR_OP logical_and_expression  logical_and_expression : inclusive_or_expression\n                               | logical_and_expression AND_OP inclusive_or_expression  inclusive_or_expression : exclusive_or_expression\n                                | inclusive_or_expression \'|\' exclusive_or_expression  exclusive_or_expression : and_expression\n                                | exclusive_or_expression \'^\' and_expression  and_expression : equality_expression\n                       | and_expression \'&\' equality_expression  equality_expression : relational_expression\n                            | equality_expression EQ_OP relational_expression\n                            | equality_expression NE_OP relational_expression  relational_expression : shift_expression\n                              | relational_expression \'<\' shift_expression\n                              | relational_expression \'>\' shift_expression\n                              | relational_expression LE_OP shift_expression\n                              | relational_expression GE_OP shift_expression  shift_expression : additive_expression\n                         | shift_expression LEFT_OP additive_expression\n                         | shift_expression RIGHT_OP additive_expression  additive_expression : multiplicative_expression\n                            | additive_expression \'+\' multiplicative_expression\n                            | additive_expression \'-\' multiplicative_expression  multiplicative_expression : cast_expression\n                                  | multiplicative_expression \'*\' cast_expression\n                                  | multiplicative_expression \'/\' cast_expression\n                                  | multiplicative_expression \'%\' cast_expression  cast_expression : unary_expression\n                        | \'(\' type_name \')\' cast_expression  unary_expression : postfix_expression\n                         | INC_OP unary_expression\n                         | DEC_OP unary_expression\n                         | unary_operator cast_expression\n                         | SIZEOF unary_expression\n                         | SIZEOF \'(\' type_name \')\'  unary_operator : \'&\'\n                       | \'*\'\n                       | \'+\'\n                       | \'-\'\n                       | \'~\'\n                       | \'!\'  postfix_expression : primary_expression\n                           | postfix_expression \'[\' expression \']\'\n                           | postfix_expression \'(\' \')\'\n                           | postfix_expression \'(\' argument_expression_list \')\'\n                           | postfix_expression \'.\' IDENTIFIER\n                           | postfix_expression PTR_OP IDENTIFIER\n                           | postfix_expression INC_OP\n                           | postfix_expression DEC_OP\n                           | \'(\' type_name \')\' \'{\' initializer_list \'}\'\n                           | \'(\' type_name \')\' \'{\' initializer_list \',\' \'}\'  primary_expression : IDENTIFIER\n                           | CONSTANT\n                           | STRING_LITERAL\n                           | \'(\' expression \')\'  expression : assignment_expression\n                   | expression \',\' assignment_expression  type_name : specifier_qualifier_list\n                  | specifier_qualifier_list abstract_declarator  abstract_declarator : pointer\n                            | direct_abstract_declarator\n                            | pointer direct_abstract_declarator  direct_abstract_declarator : \'(\' abstract_declarator \')\'\n                                   | \'[\' \']\'\n                                   | \'[\' assignment_expression \']\'\n                                   | direct_abstract_declarator \'[\' \']\'\n                                   | direct_abstract_declarator \'[\' assignment_expression \']\'\n                                   | \'[\' \'*\' \']\'\n                                   | direct_abstract_declarator \'[\' \'*\' \']\'\n                                   | \'(\' \')\'\n                                   | \'(\' parameter_type_list \')\'\n                                   | direct_abstract_declarator \'(\' \')\'\n                                   | direct_abstract_declarator \'(\' parameter_type_list \')\'  parameter_type_list : parameter_list\n                            | parameter_list \',\' ELLIPSIS  parameter_list : parameter_declaration\n                       | parameter_list \',\' parameter_declaration  parameter_declaration : declaration_specifiers declarator\n                              | declaration_specifiers abstract_declarator\n                              | declaration_specifiers  argument_expression_list : assignment_expression\n                                 | argument_expression_list \',\' assignment_expression  initializer_list : initializer\n                         | designation initializer\n                         | initializer_list \',\' initializer\n                         | initializer_list \',\' designation initializer  initializer : assignment_expression\n                    | \'{\' initializer_list \'}\'\n                    | \'{\' initializer_list \',\' \'}\'  designation : designator_list \'=\'  designator_list : designator\n                        | designator_list designator  designator : \'[\' constant_expression \']\'\n                   | \'.\' IDENTIFIER  function_definition : declaration_specifiers declarator declaration_list compound_statement\n                            | declaration_specifiers declarator compound_statement  declaration_list : declaration\n                         | declaration_list declaration  compound_statement : \'{\' \'}\'\n                           | \'{\' block_item_list \'}\'  block_item_list : block_item\n                        | block_item_list block_item  block_item : declaration\n                   | statement  statement : labeled_statement\n                  | compound_statement\n                  | expression_statement\n                  | selection_statement\n                  | iteration_statement\n                  | jump_statement  labeled_statement : IDENTIFIER \':\' statement\n                          | CASE constant_expression \':\' statement\n                          | DEFAULT \':\' statement  expression_statement : \';\'\n                             | expression \';\'  selection_statement : IF \'(\' expression \')\' statement\n                            | IF \'(\' expression \')\' statement ELSE statement\n                            | SWITCH \'(\' expression \')\' statement  iteration_statement : WHILE \'(\' expression \')\' statement\n                            | DO statement WHILE \'(\' expression \')\' \';\'\n                            | FOR \'(\' expression_statement expression_statement \')\' statement\n                            | FOR \'(\' expression_statement expression_statement expression \')\' statement\n                            | FOR \'(\' declaration expression_statement \')\' statement\n                            | FOR \'(\' declaration expression_statement expression \')\' statement  jump_statement : GOTO IDENTIFIER \';\'\n                       | CONTINUE \';\'\n                       | BREAK \';\'\n                       | RETURN \';\'\n                       | RETURN expression \';\' '
    
_lr_action_items = {'MACRO':([0,1,2,3,4,5,37,39,58,62,85,92,93,97,100,101,102,109,110,111,112,113,114,115,116,117,118,119,161,162,163,206,207,208,210,211,212,234,270,271,291,293,296,297,301,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,360,361,364,366,386,400,408,],[7,7,-1,-3,-4,-5,-2,-11,-207,-12,-206,-109,-141,-135,-111,-153,-163,-113,-164,-165,-115,-117,-119,-121,-124,-129,-132,-210,-6,-108,-139,-159,-160,-142,-143,-144,-145,-211,-7,-8,-112,-155,-157,-158,-166,-114,-116,-118,-120,-122,-123,-125,-126,-127,-128,-130,-131,-133,-134,-136,-137,-138,-154,-156,-146,-140,-110,-161,-162,]),'TYPEDEF':([0,1,2,3,4,5,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,38,39,42,45,52,55,57,58,60,61,62,64,66,85,86,92,93,97,100,101,102,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,148,152,160,161,162,163,169,177,206,207,208,210,211,212,234,235,239,245,247,248,249,252,255,257,258,259,261,266,270,271,272,277,280,291,293,296,297,301,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,324,332,333,334,336,343,354,360,361,364,366,367,374,375,386,389,390,391,400,404,406,408,409,410,411,412,],[12,12,-1,-3,-4,-5,12,12,12,12,-25,-26,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-30,-2,12,-11,-73,-80,-57,-50,12,-207,-208,12,-12,-72,12,-206,-209,-109,-141,-135,-111,-153,-163,-113,-164,-165,-115,-117,-119,-121,-124,-129,-132,-210,12,-212,-214,-215,-225,-216,-217,-218,-219,-220,-221,-89,-92,-81,-6,-108,-139,-56,-46,-159,-160,-142,-143,-144,-145,-211,-213,-226,12,-237,-238,-239,-83,-84,-88,-90,-91,12,12,-7,-8,-55,-48,-47,-112,-155,-157,-158,-166,12,-114,-116,-118,-120,-122,-123,-125,-126,-127,-128,-130,-131,-133,-134,-136,-137,-138,-222,-224,-236,-240,-82,-87,12,-49,-154,-156,-146,-140,-223,-86,-85,-110,-227,-229,-230,-161,-232,-234,-162,-228,-231,-233,-235,]),'EXTERN':([0,1,2,3,4,5,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,38,39,42,45,52,55,57,58,60,61,62,64,66,85,86,92,93,97,100,101,102,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,148,152,160,161,162,163,169,177,206,207,208,210,211,212,234,235,239,245,247,248,249,252,255,257,258,259,261,266,270,271,272,277,280,291,293,296,297,301,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,324,332,333,334,336,343,354,360,361,364,366,367,374,375,386,389,390,391,400,404,406,408,409,410,411,412,],[13,13,-1,-3,-4,-5,13,13,13,13,-25,-26,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-30,-2,13,-11,-73,-80,-57,-50,13,-207,-208,13,-12,-72,13,-206,-209,-109,-141,-135,-111,-153,-163,-113,-164,-165,-115,-117,-119,-121,-124,-129,-132,-210,13,-212,-214,-215,-225,-216,-217,-218,-219,-220,-221,-89,-92,-81,-6,-108,-139,-56,-46,-159,-160,-142,-143,-144,-145,-211,-213,-226,13,-237,-238,-239,-83,-84,-88,-90,-91,13,13,-7,-8,-55,-48,-47,-112,-155,-157,-158,-166,13,-114,-116,-118,-120,-122,-123,-125,-126,-127,-128,-130,-131,-133,-134,-136,-137,-138,-222,-224,-236,-240,-82,-87,13,-49,-154,-156,-146,-140,-223,-86,-85,-110,-227,-229,-230,-161,-232,-234,-162,-228,-231,-233,-235,]),'STATIC':([0,1,2,3,4,5,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,38,39,42,45,52,55,57,58,60,61,62,64,65,66,69,85,86,92,93,97,100,101,102,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,146,148,152,159,160,161,162,163,169,177,206,207,208,210,211,212,234,235,239,245,247,248,249,252,255,257,258,259,261,266,270,271,272,277,280,291,293,296,297,301,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,324,332,333,334,336,343,354,360,361,364,366,367,374,375,386,389,390,391,400,404,406,408,409,410,411,412,],[14,14,-1,-3,-4,-5,14,14,14,14,-25,-26,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-30,-2,14,-11,-73,-80,-57,-50,14,-207,-208,14,-12,-72,149,14,-78,-206,-209,-109,-141,-135,-111,-153,-163,-113,-164,-165,-115,-117,-119,-121,-124,-129,-132,-210,14,-212,-214,-215,-225,-216,-217,-218,-219,-220,-221,253,-89,-92,-79,-81,-6,-108,-139,-56,-46,-159,-160,-142,-143,-144,-145,-211,-213,-226,14,-237,-238,-239,-83,-84,-88,-90,-91,14,14,-7,-8,-55,-48,-47,-112,-155,-157,-158,-166,14,-114,-116,-118,-120,-122,-123,-125,-126,-127,-128,-130,-131,-133,-134,-136,-137,-138,-222,-224,-236,-240,-82,-87,14,-49,-154,-156,-146,-140,-223,-86,-85,-110,-227,-229,-230,-161,-232,-234,-162,-228,-231,-233,-235,]),'AUTO':([0,1,2,3,4,5,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,38,39,42,45,52,55,57,58,60,61,62,64,66,85,86,92,93,97,100,101,102,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,148,152,160,161,162,163,169,177,206,207,208,210,211,212,234,235,239,245,247,248,249,252,255,257,258,259,261,266,270,271,272,277,280,291,293,296,297,301,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,324,332,333,334,336,343,354,360,361,364,366,367,374,375,386,389,390,391,400,404,406,408,409,410,411,412,],[15,15,-1,-3,-4,-5,15,15,15,15,-25,-26,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-30,-2,15,-11,-73,-80,-57,-50,15,-207,-208,15,-12,-72,15,-206,-209,-109,-141,-135,-111,-153,-163,-113,-164,-165,-115,-117,-119,-121,-124,-129,-132,-210,15,-212,-214,-215,-225,-216,-217,-218,-219,-220,-221,-89,-92,-81,-6,-108,-139,-56,-46,-159,-160,-142,-143,-144,-145,-211,-213,-226,15,-237,-238,-239,-83,-84,-88,-90,-91,15,15,-7,-8,-55,-48,-47,-112,-155,-157,-158,-166,15,-114,-116,-118,-120,-122,-123,-125,-126,-127,-128,-130,-131,-133,-134,-136,-137,-138,-222,-224,-236,-240,-82,-87,15,-49,-154,-156,-146,-140,-223,-86,-85,-110,-227,-229,-230,-161,-232,-234,-162,-228,-231,-233,-235,]),'REGISTER':([0,1,2,3,4,5,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,38,39,42,45,52,55,57,58,60,61,62,64,66,85,86,92,93,97,100,101,102,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,148,152,160,161,162,163,169,177,206,207,208,210,211,212,234,235,239,245,247,248,249,252,255,257,258,259,261,266,270,271,272,277,280,291,293,296,297,301,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,324,332,333,334,336,343,354,360,361,364,366,367,374,375,386,389,390,391,400,404,406,408,409,410,411,412,],[16,16,-1,-3,-4,-5,16,16,16,16,-25,-26,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-30,-2,16,-11,-73,-80,-57,-50,16,-207,-208,16,-12,-72,16,-206,-209,-109,-141,-135,-111,-153,-163,-113,-164,-165,-115,-117,-119,-121,-124,-129,-132,-210,16,-212,-214,-215,-225,-216,-217,-218,-219,-220,-221,-89,-92,-81,-6,-108,-139,-56,-46,-159,-160,-142,-143,-144,-145,-211,-213,-226,16,-237,-238,-239,-83,-84,-88,-90,-91,16,16,-7,-8,-55,-48,-47,-112,-155,-157,-158,-166,16,-114,-116,-118,-120,-122,-123,-125,-126,-127,-128,-130,-131,-133,-134,-136,-137,-138,-222,-224,-236,-240,-82,-87,16,-49,-154,-156,-146,-140,-223,-86,-85,-110,-227,-229,-230,-161,-232,-234,-162,-228,-231,-233,-235,]),'VOID':([0,1,2,3,4,5,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,38,39,42,45,52,53,55,57,58,60,61,62,64,66,74,75,76,78,79,85,86,92,93,97,99,100,101,102,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,148,152,160,161,162,163,164,168,169,170,177,206,207,208,209,210,211,212,213,234,235,239,245,247,248,249,252,255,257,258,259,261,266,270,271,272,273,277,280,291,293,296,297,301,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,324,332,333,334,336,343,354,360,361,364,366,367,374,375,386,389,390,391,400,404,406,408,409,410,411,412,],[17,17,-1,-3,-4,-5,17,17,17,17,-25,-26,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-30,-2,17,-11,-73,-80,-57,17,-50,17,-207,-208,17,-12,-72,17,17,17,-60,17,17,-206,-209,-109,-141,-135,17,-111,-153,-163,-113,-164,-165,-115,-117,-119,-121,-124,-129,-132,-210,17,-212,-214,-215,-225,-216,-217,-218,-219,-220,-221,-89,-92,-81,-6,-108,-139,17,17,-56,-61,-46,-159,-160,-142,17,-143,-144,-145,17,-211,-213,-226,17,-237,-238,-239,-83,-84,-88,-90,-91,17,17,-7,-8,-55,-62,-48,-47,-112,-155,-157,-158,-166,17,-114,-116,-118,-120,-122,-123,-125,-126,-127,-128,-130,-131,-133,-134,-136,-137,-138,-222,-224,-236,-240,-82,-87,17,-49,-154,-156,-146,-140,-223,-86,-85,-110,-227,-229,-230,-161,-232,-234,-162,-228,-231,-233,-235,]),'CHAR':([0,1,2,3,4,5,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,38,39,42,45,52,53,55,57,58,60,61,62,64,66,74,75,76,78,79,85,86,92,93,97,99,100,101,102,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,148,152,160,161,162,163,164,168,169,170,177,206,207,208,209,210,211,212,213,234,235,239,245,247,248,249,252,255,257,258,259,261,266,270,271,272,273,277,280,291,293,296,297,301,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,324,332,333,334,336,343,354,360,361,364,366,367,374,375,386,389,390,391,400,404,406,408,409,410,411,412,],[18,18,-1,-3,-4,-5,18,18,18,18,-25,-26,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-30,-2,18,-11,-73,-80,-57,18,-50,18,-207,-208,18,-12,-72,18,18,18,-60,18,18,-206,-209,-109,-141,-135,18,-111,-153,-163,-113,-164,-165,-115,-117,-119,-121,-124,-129,-132,-210,18,-212,-214,-215,-225,-216,-217,-218,-219,-220,-221,-89,-92,-81,-6,-108,-139,18,18,-56,-61,-46,-159,-160,-142,18,-143,-144,-145,18,-211,-213,-226,18,-237,-238,-239,-83,-84,-88,-90,-91,18,18,-7,-8,-55,-62,-48,-47,-112,-155,-157,-158,-166,18,-114,-116,-118,-120,-122,-123,-125,-126,-127,-128,-130,-131,-133,-134,-136,-137,-138,-222,-224,-236,-240,-82,-87,18,-49,-154,-156,-146,-140,-223,-86,-85,-110,-227,-229,-230,-161,-232,-234,-162,-228,-231,-233,-235,]),'SHORT':([0,1,2,3,4,5,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,38,39,42,45,52,53,55,57,58,60,61,62,64,66,74,75,76,78,79,85,86,92,93,97,99,100,101,102,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,148,152,160,161,162,163,164,168,169,170,177,206,207,208,209,210,211,212,213,234,235,239,245,247,248,249,252,255,257,258,259,261,266,270,271,272,273,277,280,291,293,296,297,301,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,324,332,333,334,336,343,354,360,361,364,366,367,374,375,386,389,390,391,400,404,406,408,409,410,411,412,],[19,19,-1,-3,-4,-5,19,19,19,19,-25,-26,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-30,-2,19,-11,-73,-80,-57,19,-50,19,-207,-208,19,-12,-72,19,19,19,-60,19,19,-206,-209,-109,-141,-135,19,-111,-153,-163,-113,-164,-165,-115,-117,-119,-121,-124,-129,-132,-210,19,-212,-214,-215,-225,-216,-217,-218,-219,-220,-221,-89,-92,-81,-6,-108,-139,19,19,-56,-61,-46,-159,-160,-142,19,-143,-144,-145,19,-211,-213,-226,19,-237,-238,-239,-83,-84,-88,-90,-91,19,19,-7,-8,-55,-62,-48,-47,-112,-155,-157,-158,-166,19,-114,-116,-118,-120,-122,-123,-125,-126,-127,-128,-130,-131,-133,-134,-136,-137,-138,-222,-224,-236,-240,-82,-87,19,-49,-154,-156,-146,-140,-223,-86,-85,-110,-227,-229,-230,-161,-232,-234,-162,-228,-231,-233,-235,]),'INT':([0,1,2,3,4,5,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,38,39,42,45,52,53,55,57,58,60,61,62,64,66,74,75,76,78,79,85,86,92,93,97,99,100,101,102,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,148,152,160,161,162,163,164,168,169,170,177,206,207,208,209,210,211,212,213,234,235,239,245,247,248,249,252,255,257,258,259,261,266,270,271,272,273,277,280,291,293,296,297,301,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,324,332,333,334,336,343,354,360,361,364,366,367,374,375,386,389,390,391,400,404,406,408,409,410,411,412,],[20,20,-1,-3,-4,-5,20,20,20,20,-25,-26,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-30,-2,20,-11,-73,-80,-57,20,-50,20,-207,-208,20,-12,-72,20,20,20,-60,20,20,-206,-209,-109,-141,-135,20,-111,-153,-163,-113,-164,-165,-115,-117,-119,-121,-124,-129,-132,-210,20,-212,-214,-215,-225,-216,-217,-218,-219,-220,-221,-89,-92,-81,-6,-108,-139,20,20,-56,-61,-46,-159,-160,-142,20,-143,-144,-145,20,-211,-213,-226,20,-237,-238,-239,-83,-84,-88,-90,-91,20,20,-7,-8,-55,-62,-48,-47,-112,-155,-157,-158,-166,20,-114,-116,-118,-120,-122,-123,-125,-126,-127,-128,-130,-131,-133,-134,-136,-137,-138,-222,-224,-236,-240,-82,-87,20,-49,-154,-156,-146,-140,-223,-86,-85,-110,-227,-229,-230,-161,-232,-234,-162,-228,-231,-233,-235,]),'LONG':([0,1,2,3,4,5,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,38,39,42,45,52,53,55,57,58,60,61,62,64,66,74,75,76,78,79,85,86,92,93,97,99,100,101,102,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,148,152,160,161,162,163,164,168,169,170,177,206,207,208,209,210,211,212,213,234,235,239,245,247,248,249,252,255,257,258,259,261,266,270,271,272,273,277,280,291,293,296,297,301,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,324,332,333,334,336,343,354,360,361,364,366,367,374,375,386,389,390,391,400,404,406,408,409,410,411,412,],[21,21,-1,-3,-4,-5,21,21,21,21,-25,-26,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-30,-2,21,-11,-73,-80,-57,21,-50,21,-207,-208,21,-12,-72,21,21,21,-60,21,21,-206,-209,-109,-141,-135,21,-111,-153,-163,-113,-164,-165,-115,-117,-119,-121,-124,-129,-132,-210,21,-212,-214,-215,-225,-216,-217,-218,-219,-220,-221,-89,-92,-81,-6,-108,-139,21,21,-56,-61,-46,-159,-160,-142,21,-143,-144,-145,21,-211,-213,-226,21,-237,-238,-239,-83,-84,-88,-90,-91,21,21,-7,-8,-55,-62,-48,-47,-112,-155,-157,-158,-166,21,-114,-116,-118,-120,-122,-123,-125,-126,-127,-128,-130,-131,-133,-134,-136,-137,-138,-222,-224,-236,-240,-82,-87,21,-49,-154,-156,-146,-140,-223,-86,-85,-110,-227,-229,-230,-161,-232,-234,-162,-228,-231,-233,-235,]),'FLOAT':([0,1,2,3,4,5,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,38,39,42,45,52,53,55,57,58,60,61,62,64,66,74,75,76,78,79,85,86,92,93,97,99,100,101,102,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,148,152,160,161,162,163,164,168,169,170,177,206,207,208,209,210,211,212,213,234,235,239,245,247,248,249,252,255,257,258,259,261,266,270,271,272,273,277,280,291,293,296,297,301,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,324,332,333,334,336,343,354,360,361,364,366,367,374,375,386,389,390,391,400,404,406,408,409,410,411,412,],[22,22,-1,-3,-4,-5,22,22,22,22,-25,-26,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-30,-2,22,-11,-73,-80,-57,22,-50,22,-207,-208,22,-12,-72,22,22,22,-60,22,22,-206,-209,-109,-141,-135,22,-111,-153,-163,-113,-164,-165,-115,-117,-119,-121,-124,-129,-132,-210,22,-212,-214,-215,-225,-216,-217,-218,-219,-220,-221,-89,-92,-81,-6,-108,-139,22,22,-56,-61,-46,-159,-160,-142,22,-143,-144,-145,22,-211,-213,-226,22,-237,-238,-239,-83,-84,-88,-90,-91,22,22,-7,-8,-55,-62,-48,-47,-112,-155,-157,-158,-166,22,-114,-116,-118,-120,-122,-123,-125,-126,-127,-128,-130,-131,-133,-134,-136,-137,-138,-222,-224,-236,-240,-82,-87,22,-49,-154,-156,-146,-140,-223,-86,-85,-110,-227,-229,-230,-161,-232,-234,-162,-228,-231,-233,-235,]),'DOUBLE':([0,1,2,3,4,5,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,38,39,42,45,52,53,55,57,58,60,61,62,64,66,74,75,76,78,79,85,86,92,93,97,99,100,101,102,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,148,152,160,161,162,163,164,168,169,170,177,206,207,208,209,210,211,212,213,234,235,239,245,247,248,249,252,255,257,258,259,261,266,270,271,272,273,277,280,291,293,296,297,301,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,324,332,333,334,336,343,354,360,361,364,366,367,374,375,386,389,390,391,400,404,406,408,409,410,411,412,],[23,23,-1,-3,-4,-5,23,23,23,23,-25,-26,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-30,-2,23,-11,-73,-80,-57,23,-50,23,-207,-208,23,-12,-72,23,23,23,-60,23,23,-206,-209,-109,-141,-135,23,-111,-153,-163,-113,-164,-165,-115,-117,-119,-121,-124,-129,-132,-210,23,-212,-214,-215,-225,-216,-217,-218,-219,-220,-221,-89,-92,-81,-6,-108,-139,23,23,-56,-61,-46,-159,-160,-142,23,-143,-144,-145,23,-211,-213,-226,23,-237,-238,-239,-83,-84,-88,-90,-91,23,23,-7,-8,-55,-62,-48,-47,-112,-155,-157,-158,-166,23,-114,-116,-118,-120,-122,-123,-125,-126,-127,-128,-130,-131,-133,-134,-136,-137,-138,-222,-224,-236,-240,-82,-87,23,-49,-154,-156,-146,-140,-223,-86,-85,-110,-227,-229,-230,-161,-232,-234,-162,-228,-231,-233,-235,]),'SIGNED':([0,1,2,3,4,5,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,38,39,42,45,52,53,55,57,58,60,61,62,64,66,74,75,76,78,79,85,86,92,93,97,99,100,101,102,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,148,152,160,161,162,163,164,168,169,170,177,206,207,208,209,210,211,212,213,234,235,239,245,247,248,249,252,255,257,258,259,261,266,270,271,272,273,277,280,291,293,296,297,301,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,324,332,333,334,336,343,354,360,361,364,366,367,374,375,386,389,390,391,400,404,406,408,409,410,411,412,],[24,24,-1,-3,-4,-5,24,24,24,24,-25,-26,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-30,-2,24,-11,-73,-80,-57,24,-50,24,-207,-208,24,-12,-72,24,24,24,-60,24,24,-206,-209,-109,-141,-135,24,-111,-153,-163,-113,-164,-165,-115,-117,-119,-121,-124,-129,-132,-210,24,-212,-214,-215,-225,-216,-217,-218,-219,-220,-221,-89,-92,-81,-6,-108,-139,24,24,-56,-61,-46,-159,-160,-142,24,-143,-144,-145,24,-211,-213,-226,24,-237,-238,-239,-83,-84,-88,-90,-91,24,24,-7,-8,-55,-62,-48,-47,-112,-155,-157,-158,-166,24,-114,-116,-118,-120,-122,-123,-125,-126,-127,-128,-130,-131,-133,-134,-136,-137,-138,-222,-224,-236,-240,-82,-87,24,-49,-154,-156,-146,-140,-223,-86,-85,-110,-227,-229,-230,-161,-232,-234,-162,-228,-231,-233,-235,]),'UNSIGNED':([0,1,2,3,4,5,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,38,39,42,45,52,53,55,57,58,60,61,62,64,66,74,75,76,78,79,85,86,92,93,97,99,100,101,102,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,148,152,160,161,162,163,164,168,169,170,177,206,207,208,209,210,211,212,213,234,235,239,245,247,248,249,252,255,257,258,259,261,266,270,271,272,273,277,280,291,293,296,297,301,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,324,332,333,334,336,343,354,360,361,364,366,367,374,375,386,389,390,391,400,404,406,408,409,410,411,412,],[25,25,-1,-3,-4,-5,25,25,25,25,-25,-26,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-30,-2,25,-11,-73,-80,-57,25,-50,25,-207,-208,25,-12,-72,25,25,25,-60,25,25,-206,-209,-109,-141,-135,25,-111,-153,-163,-113,-164,-165,-115,-117,-119,-121,-124,-129,-132,-210,25,-212,-214,-215,-225,-216,-217,-218,-219,-220,-221,-89,-92,-81,-6,-108,-139,25,25,-56,-61,-46,-159,-160,-142,25,-143,-144,-145,25,-211,-213,-226,25,-237,-238,-239,-83,-84,-88,-90,-91,25,25,-7,-8,-55,-62,-48,-47,-112,-155,-157,-158,-166,25,-114,-116,-118,-120,-122,-123,-125,-126,-127,-128,-130,-131,-133,-134,-136,-137,-138,-222,-224,-236,-240,-82,-87,25,-49,-154,-156,-146,-140,-223,-86,-85,-110,-227,-229,-230,-161,-232,-234,-162,-228,-231,-233,-235,]),'BOOL':([0,1,2,3,4,5,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,38,39,42,45,52,53,55,57,58,60,61,62,64,66,74,75,76,78,79,85,86,92,93,97,99,100,101,102,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,148,152,160,161,162,163,164,168,169,170,177,206,207,208,209,210,211,212,213,234,235,239,245,247,248,249,252,255,257,258,259,261,266,270,271,272,273,277,280,291,293,296,297,301,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,324,332,333,334,336,343,354,360,361,364,366,367,374,375,386,389,390,391,400,404,406,408,409,410,411,412,],[26,26,-1,-3,-4,-5,26,26,26,26,-25,-26,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-30,-2,26,-11,-73,-80,-57,26,-50,26,-207,-208,26,-12,-72,26,26,26,-60,26,26,-206,-209,-109,-141,-135,26,-111,-153,-163,-113,-164,-165,-115,-117,-119,-121,-124,-129,-132,-210,26,-212,-214,-215,-225,-216,-217,-218,-219,-220,-221,-89,-92,-81,-6,-108,-139,26,26,-56,-61,-46,-159,-160,-142,26,-143,-144,-145,26,-211,-213,-226,26,-237,-238,-239,-83,-84,-88,-90,-91,26,26,-7,-8,-55,-62,-48,-47,-112,-155,-157,-158,-166,26,-114,-116,-118,-120,-122,-123,-125,-126,-127,-128,-130,-131,-133,-134,-136,-137,-138,-222,-224,-236,-240,-82,-87,26,-49,-154,-156,-146,-140,-223,-86,-85,-110,-227,-229,-230,-161,-232,-234,-162,-228,-231,-233,-235,]),'CONST':([0,1,2,3,4,5,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,38,39,42,44,45,52,53,55,57,58,60,61,62,64,65,66,67,69,74,75,76,78,79,85,86,92,93,97,99,100,101,102,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,146,148,149,152,159,160,161,162,163,164,168,169,170,177,206,207,208,209,210,211,212,213,234,235,239,245,247,248,249,252,255,256,257,258,259,261,266,270,271,272,273,277,280,291,293,296,297,301,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,324,332,333,334,336,343,354,360,361,364,366,367,374,375,386,389,390,391,400,404,406,408,409,410,411,412,],[29,29,-1,-3,-4,-5,29,29,29,29,-25,-26,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-30,-2,29,-11,-73,29,-80,-57,29,-50,29,-207,-208,29,-12,-72,29,29,29,-78,29,29,-60,29,29,-206,-209,-109,-141,-135,29,-111,-153,-163,-113,-164,-165,-115,-117,-119,-121,-124,-129,-132,-210,29,-212,-214,-215,-225,-216,-217,-218,-219,-220,-221,29,-89,29,-92,-79,-81,-6,-108,-139,29,29,-56,-61,-46,-159,-160,-142,29,-143,-144,-145,29,-211,-213,-226,29,-237,-238,-239,-83,-84,29,-88,-90,-91,29,29,-7,-8,-55,-62,-48,-47,-112,-155,-157,-158,-166,29,-114,-116,-118,-120,-122,-123,-125,-126,-127,-128,-130,-131,-133,-134,-136,-137,-138,-222,-224,-236,-240,-82,-87,29,-49,-154,-156,-146,-140,-223,-86,-85,-110,-227,-229,-230,-161,-232,-234,-162,-228,-231,-233,-235,]),'RESTRICT':([0,1,2,3,4,5,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,38,39,42,44,45,52,53,55,57,58,60,61,62,64,65,66,67,69,74,75,76,78,79,85,86,92,93,97,99,100,101,102,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,146,148,149,152,159,160,161,162,163,164,168,169,170,177,206,207,208,209,210,211,212,213,234,235,239,245,247,248,249,252,255,256,257,258,259,261,266,270,271,272,273,277,280,291,293,296,297,301,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,324,332,333,334,336,343,354,360,361,364,366,367,374,375,386,389,390,391,400,404,406,408,409,410,411,412,],[30,30,-1,-3,-4,-5,30,30,30,30,-25,-26,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-30,-2,30,-11,-73,30,-80,-57,30,-50,30,-207,-208,30,-12,-72,30,30,30,-78,30,30,-60,30,30,-206,-209,-109,-141,-135,30,-111,-153,-163,-113,-164,-165,-115,-117,-119,-121,-124,-129,-132,-210,30,-212,-214,-215,-225,-216,-217,-218,-219,-220,-221,30,-89,30,-92,-79,-81,-6,-108,-139,30,30,-56,-61,-46,-159,-160,-142,30,-143,-144,-145,30,-211,-213,-226,30,-237,-238,-239,-83,-84,30,-88,-90,-91,30,30,-7,-8,-55,-62,-48,-47,-112,-155,-157,-158,-166,30,-114,-116,-118,-120,-122,-123,-125,-126,-127,-128,-130,-131,-133,-134,-136,-137,-138,-222,-224,-236,-240,-82,-87,30,-49,-154,-156,-146,-140,-223,-86,-85,-110,-227,-229,-230,-161,-232,-234,-162,-228,-231,-233,-235,]),'VOLATILE':([0,1,2,3,4,5,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,38,39,42,44,45,52,53,55,57,58,60,61,62,64,65,66,67,69,74,75,76,78,79,85,86,92,93,97,99,100,101,102,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,146,148,149,152,159,160,161,162,163,164,168,169,170,177,206,207,208,209,210,211,212,213,234,235,239,245,247,248,249,252,255,256,257,258,259,261,266,270,271,272,273,277,280,291,293,296,297,301,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,324,332,333,334,336,343,354,360,361,364,366,367,374,375,386,389,390,391,400,404,406,408,409,410,411,412,],[31,31,-1,-3,-4,-5,31,31,31,31,-25,-26,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-30,-2,31,-11,-73,31,-80,-57,31,-50,31,-207,-208,31,-12,-72,31,31,31,-78,31,31,-60,31,31,-206,-209,-109,-141,-135,31,-111,-153,-163,-113,-164,-165,-115,-117,-119,-121,-124,-129,-132,-210,31,-212,-214,-215,-225,-216,-217,-218,-219,-220,-221,31,-89,31,-92,-79,-81,-6,-108,-139,31,31,-56,-61,-46,-159,-160,-142,31,-143,-144,-145,31,-211,-213,-226,31,-237,-238,-239,-83,-84,31,-88,-90,-91,31,31,-7,-8,-55,-62,-48,-47,-112,-155,-157,-158,-166,31,-114,-116,-118,-120,-122,-123,-125,-126,-127,-128,-130,-131,-133,-134,-136,-137,-138,-222,-224,-236,-240,-82,-87,31,-49,-154,-156,-146,-140,-223,-86,-85,-110,-227,-229,-230,-161,-232,-234,-162,-228,-231,-233,-235,]),'INLINE':([0,1,2,3,4,5,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,38,39,42,45,52,55,57,58,60,61,62,64,66,85,86,92,93,97,100,101,102,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,148,152,160,161,162,163,169,177,206,207,208,210,211,212,234,235,239,245,247,248,249,252,255,257,258,259,261,266,270,271,272,277,280,291,293,296,297,301,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,324,332,333,334,336,343,354,360,361,364,366,367,374,375,386,389,390,391,400,404,406,408,409,410,411,412,],[32,32,-1,-3,-4,-5,32,32,32,32,-25,-26,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-30,-2,32,-11,-73,-80,-57,-50,32,-207,-208,32,-12,-72,32,-206,-209,-109,-141,-135,-111,-153,-163,-113,-164,-165,-115,-117,-119,-121,-124,-129,-132,-210,32,-212,-214,-215,-225,-216,-217,-218,-219,-220,-221,-89,-92,-81,-6,-108,-139,-56,-46,-159,-160,-142,-143,-144,-145,-211,-213,-226,32,-237,-238,-239,-83,-84,-88,-90,-91,32,32,-7,-8,-55,-48,-47,-112,-155,-157,-158,-166,32,-114,-116,-118,-120,-122,-123,-125,-126,-127,-128,-130,-131,-133,-134,-136,-137,-138,-222,-224,-236,-240,-82,-87,32,-49,-154,-156,-146,-140,-223,-86,-85,-110,-227,-229,-230,-161,-232,-234,-162,-228,-231,-233,-235,]),'ENUM':([0,1,2,3,4,5,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,38,39,42,45,52,53,55,57,58,60,61,62,64,66,74,75,76,78,79,85,86,92,93,97,99,100,101,102,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,148,152,160,161,162,163,164,168,169,170,177,206,207,208,209,210,211,212,213,234,235,239,245,247,248,249,252,255,257,258,259,261,266,270,271,272,273,277,280,291,293,296,297,301,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,324,332,333,334,336,343,354,360,361,364,366,367,374,375,386,389,390,391,400,404,406,408,409,410,411,412,],[34,34,-1,-3,-4,-5,34,34,34,34,-25,-26,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-30,-2,34,-11,-73,-80,-57,34,-50,34,-207,-208,34,-12,-72,34,34,34,-60,34,34,-206,-209,-109,-141,-135,34,-111,-153,-163,-113,-164,-165,-115,-117,-119,-121,-124,-129,-132,-210,34,-212,-214,-215,-225,-216,-217,-218,-219,-220,-221,-89,-92,-81,-6,-108,-139,34,34,-56,-61,-46,-159,-160,-142,34,-143,-144,-145,34,-211,-213,-226,34,-237,-238,-239,-83,-84,-88,-90,-91,34,34,-7,-8,-55,-62,-48,-47,-112,-155,-157,-158,-166,34,-114,-116,-118,-120,-122,-123,-125,-126,-127,-128,-130,-131,-133,-134,-136,-137,-138,-222,-224,-236,-240,-82,-87,34,-49,-154,-156,-146,-140,-223,-86,-85,-110,-227,-229,-230,-161,-232,-234,-162,-228,-231,-233,-235,]),'STRUCT':([0,1,2,3,4,5,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,38,39,42,45,52,53,55,57,58,60,61,62,64,66,74,75,76,78,79,85,86,92,93,97,99,100,101,102,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,148,152,160,161,162,163,164,168,169,170,177,206,207,208,209,210,211,212,213,234,235,239,245,247,248,249,252,255,257,258,259,261,266,270,271,272,273,277,280,291,293,296,297,301,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,324,332,333,334,336,343,354,360,361,364,366,367,374,375,386,389,390,391,400,404,406,408,409,410,411,412,],[35,35,-1,-3,-4,-5,35,35,35,35,-25,-26,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-30,-2,35,-11,-73,-80,-57,35,-50,35,-207,-208,35,-12,-72,35,35,35,-60,35,35,-206,-209,-109,-141,-135,35,-111,-153,-163,-113,-164,-165,-115,-117,-119,-121,-124,-129,-132,-210,35,-212,-214,-215,-225,-216,-217,-218,-219,-220,-221,-89,-92,-81,-6,-108,-139,35,35,-56,-61,-46,-159,-160,-142,35,-143,-144,-145,35,-211,-213,-226,35,-237,-238,-239,-83,-84,-88,-90,-91,35,35,-7,-8,-55,-62,-48,-47,-112,-155,-157,-158,-166,35,-114,-116,-118,-120,-122,-123,-125,-126,-127,-128,-130,-131,-133,-134,-136,-137,-138,-222,-224,-236,-240,-82,-87,35,-49,-154,-156,-146,-140,-223,-86,-85,-110,-227,-229,-230,-161,-232,-234,-162,-228,-231,-233,-235,]),'UNION':([0,1,2,3,4,5,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,38,39,42,45,52,53,55,57,58,60,61,62,64,66,74,75,76,78,79,85,86,92,93,97,99,100,101,102,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,148,152,160,161,162,163,164,168,169,170,177,206,207,208,209,210,211,212,213,234,235,239,245,247,248,249,252,255,257,258,259,261,266,270,271,272,273,277,280,291,293,296,297,301,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,324,332,333,334,336,343,354,360,361,364,366,367,374,375,386,389,390,391,400,404,406,408,409,410,411,412,],[36,36,-1,-3,-4,-5,36,36,36,36,-25,-26,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-30,-2,36,-11,-73,-80,-57,36,-50,36,-207,-208,36,-12,-72,36,36,36,-60,36,36,-206,-209,-109,-141,-135,36,-111,-153,-163,-113,-164,-165,-115,-117,-119,-121,-124,-129,-132,-210,36,-212,-214,-215,-225,-216,-217,-218,-219,-220,-221,-89,-92,-81,-6,-108,-139,36,36,-56,-61,-46,-159,-160,-142,36,-143,-144,-145,36,-211,-213,-226,36,-237,-238,-239,-83,-84,-88,-90,-91,36,36,-7,-8,-55,-62,-48,-47,-112,-155,-157,-158,-166,36,-114,-116,-118,-120,-122,-123,-125,-126,-127,-128,-130,-131,-133,-134,-136,-137,-138,-222,-224,-236,-240,-82,-87,36,-49,-154,-156,-146,-140,-223,-86,-85,-110,-227,-229,-230,-161,-232,-234,-162,-228,-231,-233,-235,]),'$end':([1,2,3,4,5,37,39,58,62,85,92,93,97,100,101,102,109,110,111,112,113,114,115,116,117,118,119,161,162,163,206,207,208,210,211,212,234,270,271,291,293,296,297,301,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,360,361,364,366,386,400,408,],[0,-1,-3,-4,-5,-2,-11,-207,-12,-206,-109,-141,-135,-111,-153,-163,-113,-164,-165,-115,-117,-119,-121,-124,-129,-132,-210,-6,-108,-139,-159,-160,-142,-143,-144,-145,-211,-7,-8,-112,-155,-157,-158,-166,-114,-116,-118,-120,-122,-123,-125,-126,-127,-128,-130,-131,-133,-134,-136,-137,-138,-154,-156,-146,-140,-110,-161,-162,]),';':([6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,38,39,40,42,43,45,48,49,50,51,52,55,56,61,62,64,84,87,88,90,91,92,93,97,100,101,102,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,138,141,142,143,144,145,148,152,160,162,163,169,171,172,173,177,206,207,208,210,211,212,234,235,236,238,239,245,246,247,248,249,250,252,255,257,258,259,272,276,277,280,282,289,291,293,296,297,301,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,330,331,332,333,334,336,352,353,354,355,360,361,364,366,367,368,369,370,374,375,386,389,390,391,393,395,400,402,403,404,405,406,407,408,409,410,411,412,],[39,-17,-19,-21,-23,-25,-26,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-30,-15,-11,62,-73,-13,-80,-18,-20,-22,-24,-57,-50,39,124,-12,-72,-15,-16,-198,-95,-139,-109,-141,-135,-111,-153,-163,-113,-164,-165,-115,-117,-119,-121,-124,-129,-132,-210,124,-212,-214,-215,-225,-216,-217,-218,-219,-220,-221,-163,239,124,247,248,249,-167,-14,-89,-92,-81,-108,-139,-56,273,-67,-69,-46,-159,-160,-142,-143,-144,-145,-211,-213,124,124,-226,124,332,-237,-238,-239,333,-83,-84,-88,-90,-91,-55,-70,-48,-47,-199,-96,-112,-155,-157,-158,-166,-114,-116,-118,-120,-122,-123,-125,-126,-127,-128,-130,-131,-133,-134,-136,-137,-138,-222,124,-224,-168,124,124,-236,-240,-82,-87,-68,-71,-49,-200,-154,-156,-146,-140,-223,124,124,124,-86,-85,-110,-227,-229,-230,124,124,-161,124,410,-232,124,-234,124,-162,-228,-231,-233,-235,]),'*':([6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,39,44,46,48,49,50,51,52,55,56,59,61,62,63,65,67,69,71,77,78,79,89,91,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,110,111,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,138,143,146,150,157,159,163,164,169,174,175,176,177,179,183,186,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,206,207,208,209,210,211,212,213,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,238,239,240,241,242,243,245,247,248,249,253,254,256,266,267,272,274,275,277,280,283,285,293,296,297,300,301,304,317,318,319,320,321,322,323,324,330,331,332,333,342,349,350,354,357,359,360,361,362,364,365,366,367,368,369,370,371,372,373,378,389,390,391,393,395,400,401,402,404,405,406,407,408,409,410,411,412,],[44,-17,-19,-21,-23,-25,-26,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-30,-11,44,44,-18,-20,-22,-24,-57,-50,44,104,104,-12,44,150,44,-78,104,44,-64,-66,104,-139,-141,104,104,104,-135,104,104,-153,-163,-147,-148,-149,-150,-151,-152,-164,-165,231,-210,104,-212,-214,-215,-225,-216,-217,-218,-219,-220,-221,-163,104,104,104,254,-148,44,-79,-139,104,-56,104,-63,-65,-46,104,104,104,104,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,104,104,104,104,-159,-160,-142,104,-143,-144,-145,104,44,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,-211,-213,104,104,-226,104,104,104,104,104,-237,-238,-239,104,-148,104,44,349,-55,44,104,-48,-47,104,-201,-155,-157,-158,104,-166,44,231,231,-136,-137,-138,-222,104,-224,104,104,-236,-240,378,-148,104,-49,104,104,-154,-156,104,-146,104,-140,-223,104,104,104,104,104,104,-148,-227,-229,-230,104,104,-161,104,104,-232,104,-234,104,-162,-228,-231,-233,-235,]),'IDENTIFIER':([6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,39,41,44,46,47,48,49,50,51,52,54,55,56,59,61,62,63,65,66,67,68,69,71,72,73,77,78,79,83,89,94,95,96,98,99,103,104,105,106,107,108,119,120,121,122,123,124,125,126,127,128,129,130,132,138,140,143,146,150,157,158,159,164,169,174,175,176,177,178,179,183,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,209,213,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,238,239,240,241,242,243,245,247,248,249,253,254,256,260,264,266,267,269,272,274,275,277,280,281,283,285,300,322,323,324,330,331,332,333,342,349,350,354,357,359,362,365,367,368,369,370,371,372,373,378,389,390,391,393,395,401,402,404,405,406,407,409,410,411,412,],[45,47,-17,-19,-21,-23,-25,-26,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-30,52,55,-58,-59,-11,45,-74,45,71,-18,-20,-22,-24,-57,82,-50,45,102,131,-12,45,102,155,-75,-76,-78,102,165,165,45,-64,-66,82,102,102,102,102,102,102,-147,-148,-149,-150,-151,-152,-210,131,-212,-214,-215,-225,-216,-217,-218,-219,-220,-221,102,131,246,102,102,-148,45,-77,-79,102,-56,102,-63,-65,-46,82,102,102,102,288,102,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,102,102,102,102,296,297,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,-211,-213,131,131,-226,102,102,102,102,102,-237,-238,-239,102,-148,102,338,45,45,102,351,-55,45,102,-48,-47,82,102,-201,102,-222,131,-224,102,102,-236,-240,102,-148,102,-49,102,102,102,102,-223,131,131,131,102,102,102,-148,-227,-229,-230,131,131,102,131,-232,131,-234,131,-228,-231,-233,-235,]),'(':([6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,39,41,42,44,45,46,48,49,50,51,52,55,56,59,61,62,63,64,65,67,68,69,71,77,78,79,89,93,94,95,96,98,99,101,102,103,104,105,106,107,108,110,111,119,120,121,122,123,124,125,126,127,128,129,130,131,132,135,136,137,138,139,143,146,148,150,152,157,158,159,160,164,169,174,175,176,177,179,183,186,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,206,207,209,213,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,238,239,240,241,242,243,245,247,248,249,252,253,254,255,256,257,258,259,264,265,266,267,272,274,275,277,280,283,285,293,296,297,300,301,303,304,322,323,324,329,330,331,332,333,334,336,341,342,344,347,349,350,354,357,359,360,361,362,365,367,368,369,370,371,372,373,374,375,376,378,379,381,382,383,384,389,390,391,393,395,397,398,399,400,401,402,404,405,406,407,408,409,410,411,412,],[46,-17,-19,-21,-23,-25,-26,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-30,-11,46,66,-74,-80,46,-18,-20,-22,-24,-57,-50,46,99,99,-12,46,66,99,-75,-76,-78,164,46,-64,-66,99,203,209,209,164,213,99,-153,-163,-147,-148,-149,-150,-151,-152,-164,-165,-210,99,-212,-214,-215,-225,-216,-217,-218,-219,-220,-221,-163,164,241,242,243,99,245,99,99,-89,-148,-92,266,-77,-79,-81,99,-56,164,-63,-65,-46,164,99,164,99,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,99,164,99,99,-159,-160,99,99,304,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,-211,-213,99,99,-226,99,99,99,99,99,-237,-238,-239,-83,99,-148,-84,99,-88,-90,-91,266,343,266,99,-55,46,164,-48,-47,99,-201,-155,-157,-158,164,-166,304,304,-222,99,-224,371,99,99,-236,-240,-82,-87,343,99,-181,-175,-148,164,-49,99,164,-154,-156,99,99,-223,99,99,99,99,99,99,-86,-85,-177,-148,-183,-174,-182,-176,-179,-227,-229,-230,99,99,-178,-180,-184,-161,99,99,-232,99,-234,99,-162,-228,-231,-233,-235,]),'[':([8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,42,44,45,48,49,50,51,52,55,64,67,68,69,78,79,89,93,101,102,110,111,131,148,152,157,158,159,160,169,175,176,177,184,185,206,207,216,252,255,257,258,259,264,265,266,272,277,280,283,286,288,293,296,297,301,303,304,334,336,341,344,347,354,358,360,361,365,374,375,376,379,381,382,383,384,397,398,399,400,401,408,],[-17,-19,-21,-23,-25,-26,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-30,65,-74,-80,-18,-20,-22,-24,-57,-50,65,-75,-76,-78,-64,-66,186,202,-153,-163,-164,-165,-163,-89,-92,267,-77,-79,-81,-56,-63,-65,-46,186,-202,-159,-160,267,-83,-84,-88,-90,-91,267,342,267,-55,-48,-47,186,-203,-205,-155,-157,-158,-166,267,267,-82,-87,342,-181,-175,-49,-204,-154,-156,186,-86,-85,-177,-183,-174,-182,-176,-179,-178,-180,-184,-161,186,-162,]),',':([8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,38,40,42,43,44,45,48,49,50,51,52,55,64,67,68,69,80,81,82,84,87,88,90,91,92,93,97,100,101,102,109,110,111,112,113,114,115,116,117,118,131,134,144,145,148,152,153,154,155,156,157,158,159,160,162,163,169,171,172,173,177,180,181,182,206,207,208,210,211,212,215,250,252,255,257,258,259,262,263,264,265,272,276,277,278,279,280,282,284,289,290,291,292,293,294,295,296,297,301,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,325,326,327,328,334,336,338,340,341,344,347,352,353,354,355,356,360,361,364,366,374,375,376,379,381,382,383,384,385,386,387,388,392,394,396,397,398,399,400,408,],[-17,-19,-21,-23,-25,-26,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-30,-15,63,-73,-13,-74,-80,-18,-20,-22,-24,-57,-50,-72,-75,-76,-78,178,-51,-53,-15,-16,-198,-95,-139,-109,-141,-135,-111,-153,-163,-113,-164,-165,-115,-117,-119,-121,-124,-129,-132,-163,240,-167,-14,-89,-92,260,261,-93,-187,-191,-77,-79,-81,-108,-139,-56,274,-67,-69,-46,281,283,-194,-159,-160,-142,-143,-144,-145,240,240,-83,-84,-88,-90,-91,-189,-190,-171,-172,-55,-70,-48,-52,-54,-47,-199,-195,-96,240,-112,240,-155,362,-192,-157,-158,-166,-114,-116,-118,-120,-122,-123,-125,-126,-127,-128,-130,-131,-133,-134,-136,-137,-138,-168,240,240,240,-82,-87,-94,-188,-173,-181,-175,-68,-71,-49,-200,-196,-154,-156,-146,-140,-86,-85,-177,-183,-174,-182,-176,-179,-197,-110,-193,401,240,240,240,-178,-180,-184,-161,-162,]),')':([8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,42,44,45,48,49,50,51,52,55,64,66,67,68,69,70,78,79,90,91,92,93,97,100,101,102,109,110,111,112,113,114,115,116,117,118,124,144,148,151,152,153,154,155,156,157,158,159,160,163,169,175,176,177,203,206,207,208,210,211,212,214,215,216,239,252,255,257,258,259,262,263,264,265,266,268,272,277,280,289,291,293,294,295,296,297,298,299,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,325,326,327,328,334,336,338,339,340,341,343,344,345,346,347,354,360,361,364,366,372,373,374,375,376,379,380,381,382,383,384,386,387,392,394,396,397,398,399,400,408,],[-17,-19,-21,-23,-25,-26,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-30,-73,-74,-80,-18,-20,-22,-24,-57,-50,-72,152,-75,-76,-78,160,-64,-66,-95,-139,-109,-141,-135,-111,-153,-163,-113,-164,-165,-115,-117,-119,-121,-124,-129,-132,-225,-167,-89,258,-92,259,-185,-93,-187,-191,-77,-79,-81,-139,-56,-63,-65,-46,293,-159,-160,-142,-143,-144,-145,300,301,-169,-226,-83,-84,-88,-90,-91,-189,-190,-171,-172,344,350,-55,-48,-47,-96,-112,-155,361,-192,-157,-158,363,364,-166,-170,-171,344,-114,-116,-118,-120,-122,-123,-125,-126,-127,-128,-130,-131,-133,-134,-136,-137,-138,-168,368,369,370,-82,-87,-94,-186,-188,-173,379,-181,381,382,-175,-49,-154,-156,-146,-140,393,395,-86,-85,-177,-183,399,-174,-182,-176,-179,-110,-193,403,405,407,-178,-180,-184,-161,-162,]),':':([17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,42,45,52,55,64,77,78,79,90,91,92,93,97,100,101,102,109,110,111,112,113,114,115,116,117,118,131,133,144,148,152,160,162,163,169,173,175,176,177,206,207,208,210,211,212,237,252,255,257,258,259,272,274,277,280,289,290,291,293,296,297,301,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,325,334,336,354,360,361,364,366,374,375,386,400,408,],[-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-73,-80,-57,-50,-72,174,-64,-66,-95,-139,-109,-141,-135,-111,-153,-163,-113,-164,-165,-115,-117,-119,-121,-124,-129,-132,236,238,-167,-89,-92,-81,-108,-139,-56,275,-63,-65,-46,-159,-160,-142,-143,-144,-145,323,-83,-84,-88,-90,-91,-55,174,-48,-47,-96,359,-112,-155,-157,-158,-166,-114,-116,-118,-120,-122,-123,-125,-126,-127,-128,-130,-131,-133,-134,-136,-137,-138,-168,-82,-87,-49,-154,-156,-146,-140,-86,-85,-110,-161,-162,]),']':([29,30,31,65,69,90,91,92,93,97,100,101,102,109,110,111,112,113,114,115,116,117,118,144,146,147,150,159,162,163,206,207,208,210,211,212,251,254,267,287,289,291,292,293,296,297,301,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,325,335,337,342,348,349,360,361,364,366,377,378,386,400,408,],[-43,-44,-45,148,-78,-95,-139,-109,-141,-135,-111,-153,-163,-113,-164,-165,-115,-117,-119,-121,-124,-129,-132,-167,252,255,257,-79,-108,-139,-159,-160,-142,-143,-144,-145,334,336,347,358,-96,-112,360,-155,-157,-158,-166,-114,-116,-118,-120,-122,-123,-125,-126,-127,-128,-130,-131,-133,-134,-136,-137,-138,-168,374,375,376,383,384,-154,-156,-146,-140,397,398,-110,-161,-162,]),'INC_OP':([29,30,31,39,59,61,62,65,69,71,89,93,94,95,96,98,99,101,102,103,104,105,106,107,108,110,111,119,120,121,122,123,124,125,126,127,128,129,130,131,132,138,143,146,150,159,164,174,179,183,186,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,206,207,209,213,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,238,239,240,241,242,243,245,247,248,249,253,254,256,267,275,283,285,293,296,297,300,301,322,323,324,330,331,332,333,342,349,350,357,359,360,361,362,365,367,368,369,370,371,372,373,378,389,390,391,393,395,400,401,402,404,405,406,407,408,409,410,411,412,],[-43,-44,-45,-11,94,94,-12,94,-78,94,94,206,94,94,94,94,94,-153,-163,-147,-148,-149,-150,-151,-152,-164,-165,-210,94,-212,-214,-215,-225,-216,-217,-218,-219,-220,-221,-163,94,94,94,94,-148,-79,94,94,94,94,94,94,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,94,94,94,94,-159,-160,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,-211,-213,94,94,-226,94,94,94,94,94,-237,-238,-239,94,-148,94,94,94,94,-201,-155,-157,-158,94,-166,-222,94,-224,94,94,-236,-240,94,-148,94,94,94,-154,-156,94,94,-223,94,94,94,94,94,94,-148,-227,-229,-230,94,94,-161,94,94,-232,94,-234,94,-162,-228,-231,-233,-235,]),'DEC_OP':([29,30,31,39,59,61,62,65,69,71,89,93,94,95,96,98,99,101,102,103,104,105,106,107,108,110,111,119,120,121,122,123,124,125,126,127,128,129,130,131,132,138,143,146,150,159,164,174,179,183,186,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,206,207,209,213,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,238,239,240,241,242,243,245,247,248,249,253,254,256,267,275,283,285,293,296,297,300,301,322,323,324,330,331,332,333,342,349,350,357,359,360,361,362,365,367,368,369,370,371,372,373,378,389,390,391,393,395,400,401,402,404,405,406,407,408,409,410,411,412,],[-43,-44,-45,-11,95,95,-12,95,-78,95,95,207,95,95,95,95,95,-153,-163,-147,-148,-149,-150,-151,-152,-164,-165,-210,95,-212,-214,-215,-225,-216,-217,-218,-219,-220,-221,-163,95,95,95,95,-148,-79,95,95,95,95,95,95,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,95,95,95,95,-159,-160,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,-211,-213,95,95,-226,95,95,95,95,95,-237,-238,-239,95,-148,95,95,95,95,-201,-155,-157,-158,95,-166,-222,95,-224,95,95,-236,-240,95,-148,95,95,95,-154,-156,95,95,-223,95,95,95,95,95,95,-148,-227,-229,-230,95,95,-161,95,95,-232,95,-234,95,-162,-228,-231,-233,-235,]),'SIZEOF':([29,30,31,39,59,61,62,65,69,71,89,94,95,96,98,99,103,104,105,106,107,108,119,120,121,122,123,124,125,126,127,128,129,130,132,138,143,146,150,159,164,174,179,183,186,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,209,213,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,238,239,240,241,242,243,245,247,248,249,253,254,256,267,275,283,285,300,322,323,324,330,331,332,333,342,349,350,357,359,362,365,367,368,369,370,371,372,373,378,389,390,391,393,395,401,402,404,405,406,407,409,410,411,412,],[-43,-44,-45,-11,98,98,-12,98,-78,98,98,98,98,98,98,98,-147,-148,-149,-150,-151,-152,-210,98,-212,-214,-215,-225,-216,-217,-218,-219,-220,-221,98,98,98,98,-148,-79,98,98,98,98,98,98,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,-211,-213,98,98,-226,98,98,98,98,98,-237,-238,-239,98,-148,98,98,98,98,-201,98,-222,98,-224,98,98,-236,-240,98,-148,98,98,98,98,98,-223,98,98,98,98,98,98,-148,-227,-229,-230,98,98,98,98,-232,98,-234,98,-228,-231,-233,-235,]),'&':([29,30,31,39,59,61,62,65,69,71,89,91,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,138,143,146,150,159,163,164,174,179,183,186,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,206,207,208,209,210,211,212,213,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,238,239,240,241,242,243,245,247,248,249,253,254,256,267,275,283,285,293,296,297,300,301,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,330,331,332,333,342,349,350,357,359,360,361,362,364,365,366,367,368,369,370,371,372,373,378,389,390,391,393,395,400,401,402,404,405,406,407,408,409,410,411,412,],[-43,-44,-45,-11,103,103,-12,103,-78,103,103,-139,-141,103,103,103,-135,103,103,-153,-163,-147,-148,-149,-150,-151,-152,-164,-165,220,-119,-121,-124,-129,-132,-210,103,-212,-214,-215,-225,-216,-217,-218,-219,-220,-221,-163,103,103,103,103,-148,-79,-139,103,103,103,103,103,103,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,103,103,103,103,-159,-160,-142,103,-143,-144,-145,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,-211,-213,103,103,-226,103,103,103,103,103,-237,-238,-239,103,-148,103,103,103,103,-201,-155,-157,-158,103,-166,220,-120,-122,-123,-125,-126,-127,-128,-130,-131,-133,-134,-136,-137,-138,-222,103,-224,103,103,-236,-240,103,-148,103,103,103,-154,-156,103,-146,103,-140,-223,103,103,103,103,103,103,-148,-227,-229,-230,103,103,-161,103,103,-232,103,-234,103,-162,-228,-231,-233,-235,]),'+':([29,30,31,39,59,61,62,65,69,71,89,91,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,110,111,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,138,143,146,150,159,163,164,174,179,183,186,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,206,207,208,209,210,211,212,213,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,238,239,240,241,242,243,245,247,248,249,253,254,256,267,275,283,285,293,296,297,300,301,315,316,317,318,319,320,321,322,323,324,330,331,332,333,342,349,350,357,359,360,361,362,364,365,366,367,368,369,370,371,372,373,378,389,390,391,393,395,400,401,402,404,405,406,407,408,409,410,411,412,],[-43,-44,-45,-11,105,105,-12,105,-78,105,105,-139,-141,105,105,105,-135,105,105,-153,-163,-147,-148,-149,-150,-151,-152,-164,-165,229,-132,-210,105,-212,-214,-215,-225,-216,-217,-218,-219,-220,-221,-163,105,105,105,105,-148,-79,-139,105,105,105,105,105,105,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,105,105,105,105,-159,-160,-142,105,-143,-144,-145,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,-211,-213,105,105,-226,105,105,105,105,105,-237,-238,-239,105,-148,105,105,105,105,-201,-155,-157,-158,105,-166,229,229,-133,-134,-136,-137,-138,-222,105,-224,105,105,-236,-240,105,-148,105,105,105,-154,-156,105,-146,105,-140,-223,105,105,105,105,105,105,-148,-227,-229,-230,105,105,-161,105,105,-232,105,-234,105,-162,-228,-231,-233,-235,]),'-':([29,30,31,39,59,61,62,65,69,71,89,91,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,110,111,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,138,143,146,150,159,163,164,174,179,183,186,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,206,207,208,209,210,211,212,213,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,238,239,240,241,242,243,245,247,248,249,253,254,256,267,275,283,285,293,296,297,300,301,315,316,317,318,319,320,321,322,323,324,330,331,332,333,342,349,350,357,359,360,361,362,364,365,366,367,368,369,370,371,372,373,378,389,390,391,393,395,400,401,402,404,405,406,407,408,409,410,411,412,],[-43,-44,-45,-11,106,106,-12,106,-78,106,106,-139,-141,106,106,106,-135,106,106,-153,-163,-147,-148,-149,-150,-151,-152,-164,-165,230,-132,-210,106,-212,-214,-215,-225,-216,-217,-218,-219,-220,-221,-163,106,106,106,106,-148,-79,-139,106,106,106,106,106,106,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,106,106,106,106,-159,-160,-142,106,-143,-144,-145,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,-211,-213,106,106,-226,106,106,106,106,106,-237,-238,-239,106,-148,106,106,106,106,-201,-155,-157,-158,106,-166,230,230,-133,-134,-136,-137,-138,-222,106,-224,106,106,-236,-240,106,-148,106,106,106,-154,-156,106,-146,106,-140,-223,106,106,106,106,106,106,-148,-227,-229,-230,106,106,-161,106,106,-232,106,-234,106,-162,-228,-231,-233,-235,]),'~':([29,30,31,39,59,61,62,65,69,71,89,94,95,96,98,99,103,104,105,106,107,108,119,120,121,122,123,124,125,126,127,128,129,130,132,138,143,146,150,159,164,174,179,183,186,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,209,213,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,238,239,240,241,242,243,245,247,248,249,253,254,256,267,275,283,285,300,322,323,324,330,331,332,333,342,349,350,357,359,362,365,367,368,369,370,371,372,373,378,389,390,391,393,395,401,402,404,405,406,407,409,410,411,412,],[-43,-44,-45,-11,107,107,-12,107,-78,107,107,107,107,107,107,107,-147,-148,-149,-150,-151,-152,-210,107,-212,-214,-215,-225,-216,-217,-218,-219,-220,-221,107,107,107,107,-148,-79,107,107,107,107,107,107,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,-211,-213,107,107,-226,107,107,107,107,107,-237,-238,-239,107,-148,107,107,107,107,-201,107,-222,107,-224,107,107,-236,-240,107,-148,107,107,107,107,107,-223,107,107,107,107,107,107,-148,-227,-229,-230,107,107,107,107,-232,107,-234,107,-228,-231,-233,-235,]),'!':([29,30,31,39,59,61,62,65,69,71,89,94,95,96,98,99,103,104,105,106,107,108,119,120,121,122,123,124,125,126,127,128,129,130,132,138,143,146,150,159,164,174,179,183,186,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,209,213,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,238,239,240,241,242,243,245,247,248,249,253,254,256,267,275,283,285,300,322,323,324,330,331,332,333,342,349,350,357,359,362,365,367,368,369,370,371,372,373,378,389,390,391,393,395,401,402,404,405,406,407,409,410,411,412,],[-43,-44,-45,-11,108,108,-12,108,-78,108,108,108,108,108,108,108,-147,-148,-149,-150,-151,-152,-210,108,-212,-214,-215,-225,-216,-217,-218,-219,-220,-221,108,108,108,108,-148,-79,108,108,108,108,108,108,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,-211,-213,108,108,-226,108,108,108,108,108,-237,-238,-239,108,-148,108,108,108,108,-201,108,-222,108,-224,108,108,-236,-240,108,-148,108,108,108,108,108,-223,108,108,108,108,108,108,-148,-227,-229,-230,108,108,108,108,-232,108,-234,108,-228,-231,-233,-235,]),'CONSTANT':([29,30,31,39,59,61,62,65,69,71,89,94,95,96,98,99,103,104,105,106,107,108,119,120,121,122,123,124,125,126,127,128,129,130,132,138,143,146,150,159,164,174,179,183,186,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,209,213,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,238,239,240,241,242,243,245,247,248,249,253,254,256,267,275,283,285,300,322,323,324,330,331,332,333,342,349,350,357,359,362,365,367,368,369,370,371,372,373,378,389,390,391,393,395,401,402,404,405,406,407,409,410,411,412,],[-43,-44,-45,-11,110,110,-12,110,-78,110,110,110,110,110,110,110,-147,-148,-149,-150,-151,-152,-210,110,-212,-214,-215,-225,-216,-217,-218,-219,-220,-221,110,110,110,110,-148,-79,110,110,110,110,110,110,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,-211,-213,110,110,-226,110,110,110,110,110,-237,-238,-239,110,-148,110,110,110,110,-201,110,-222,110,-224,110,110,-236,-240,110,-148,110,110,110,110,110,-223,110,110,110,110,110,110,-148,-227,-229,-230,110,110,110,110,-232,110,-234,110,-228,-231,-233,-235,]),'STRING_LITERAL':([29,30,31,39,59,61,62,65,69,71,89,94,95,96,98,99,103,104,105,106,107,108,119,120,121,122,123,124,125,126,127,128,129,130,132,138,143,146,150,159,164,174,179,183,186,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,209,213,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,238,239,240,241,242,243,245,247,248,249,253,254,256,267,275,283,285,300,322,323,324,330,331,332,333,342,349,350,357,359,362,365,367,368,369,370,371,372,373,378,389,390,391,393,395,401,402,404,405,406,407,409,410,411,412,],[-43,-44,-45,-11,111,111,-12,111,-78,111,111,111,111,111,111,111,-147,-148,-149,-150,-151,-152,-210,111,-212,-214,-215,-225,-216,-217,-218,-219,-220,-221,111,111,111,111,-148,-79,111,111,111,111,111,111,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,-211,-213,111,111,-226,111,111,111,111,111,-237,-238,-239,111,-148,111,111,111,111,-201,111,-222,111,-224,111,111,-236,-240,111,-148,111,111,111,111,111,-223,111,111,111,111,111,111,-148,-227,-229,-230,111,111,111,111,-232,111,-234,111,-228,-231,-233,-235,]),'{':([33,34,35,36,38,39,42,45,52,55,57,59,60,61,62,64,86,89,119,120,121,122,123,124,125,126,127,128,129,130,138,148,152,160,183,234,235,236,238,239,247,248,249,252,255,257,258,259,283,285,300,322,323,324,332,333,334,336,350,357,363,364,365,367,368,369,370,374,375,389,390,391,393,395,401,402,404,405,406,407,409,410,411,412,],[53,54,-58,-59,61,-11,-73,-80,74,83,61,89,-208,61,-12,-72,-209,89,-210,61,-212,-214,-215,-225,-216,-217,-218,-219,-220,-221,61,-89,-92,-81,89,-211,-213,61,61,-226,-237,-238,-239,-83,-84,-88,-90,-91,89,-201,365,-222,61,-224,-236,-240,-82,-87,365,89,365,365,89,-223,61,61,61,-86,-85,-227,-229,-230,61,61,89,61,-232,61,-234,61,-228,-231,-233,-235,]),'=':([38,42,45,64,82,84,91,93,101,102,110,111,131,148,152,160,163,184,185,206,207,208,210,211,212,252,255,257,258,259,286,288,293,296,297,301,334,336,358,360,361,364,366,374,375,400,408,],[59,-73,-80,-72,179,59,189,-141,-153,-163,-164,-165,-163,-89,-92,-81,-139,285,-202,-159,-160,-142,-143,-144,-145,-83,-84,-88,-90,-91,-203,-205,-155,-157,-158,-166,-82,-87,-204,-154,-156,-146,-140,-86,-85,-161,-162,]),'}':([39,61,62,75,76,80,81,82,88,90,91,92,93,97,100,101,102,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,162,163,168,170,178,180,181,182,206,207,208,210,211,212,234,235,239,247,248,249,273,278,279,281,282,283,284,289,291,293,296,297,301,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,324,332,333,355,356,360,361,364,366,367,385,386,388,389,390,391,400,401,404,406,408,409,410,411,412,],[-11,119,-12,169,-60,177,-51,-53,-198,-95,-139,-109,-141,-135,-111,-153,-163,-113,-164,-165,-115,-117,-119,-121,-124,-129,-132,-210,234,-212,-214,-215,-225,-216,-217,-218,-219,-220,-221,-108,-139,272,-61,277,280,282,-194,-159,-160,-142,-143,-144,-145,-211,-213,-226,-237,-238,-239,-62,-52,-54,354,-199,355,-195,-96,-112,-155,-157,-158,-166,-114,-116,-118,-120,-122,-123,-125,-126,-127,-128,-130,-131,-133,-134,-136,-137,-138,-222,-224,-236,-240,-200,-196,-154,-156,-146,-140,-223,-197,-110,400,-227,-229,-230,-161,408,-232,-234,-162,-228,-231,-233,-235,]),'CASE':([39,61,62,119,120,121,122,123,124,125,126,127,128,129,130,138,234,235,236,238,239,247,248,249,322,323,324,332,333,367,368,369,370,389,390,391,393,395,402,404,405,406,407,409,410,411,412,],[-11,132,-12,-210,132,-212,-214,-215,-225,-216,-217,-218,-219,-220,-221,132,-211,-213,132,132,-226,-237,-238,-239,-222,132,-224,-236,-240,-223,132,132,132,-227,-229,-230,132,132,132,-232,132,-234,132,-228,-231,-233,-235,]),'DEFAULT':([39,61,62,119,120,121,122,123,124,125,126,127,128,129,130,138,234,235,236,238,239,247,248,249,322,323,324,332,333,367,368,369,370,389,390,391,393,395,402,404,405,406,407,409,410,411,412,],[-11,133,-12,-210,133,-212,-214,-215,-225,-216,-217,-218,-219,-220,-221,133,-211,-213,133,133,-226,-237,-238,-239,-222,133,-224,-236,-240,-223,133,133,133,-227,-229,-230,133,133,133,-232,133,-234,133,-228,-231,-233,-235,]),'IF':([39,61,62,119,120,121,122,123,124,125,126,127,128,129,130,138,234,235,236,238,239,247,248,249,322,323,324,332,333,367,368,369,370,389,390,391,393,395,402,404,405,406,407,409,410,411,412,],[-11,135,-12,-210,135,-212,-214,-215,-225,-216,-217,-218,-219,-220,-221,135,-211,-213,135,135,-226,-237,-238,-239,-222,135,-224,-236,-240,-223,135,135,135,-227,-229,-230,135,135,135,-232,135,-234,135,-228,-231,-233,-235,]),'SWITCH':([39,61,62,119,120,121,122,123,124,125,126,127,128,129,130,138,234,235,236,238,239,247,248,249,322,323,324,332,333,367,368,369,370,389,390,391,393,395,402,404,405,406,407,409,410,411,412,],[-11,136,-12,-210,136,-212,-214,-215,-225,-216,-217,-218,-219,-220,-221,136,-211,-213,136,136,-226,-237,-238,-239,-222,136,-224,-236,-240,-223,136,136,136,-227,-229,-230,136,136,136,-232,136,-234,136,-228,-231,-233,-235,]),'WHILE':([39,61,62,119,120,121,122,123,124,125,126,127,128,129,130,138,234,235,236,238,239,244,247,248,249,322,323,324,332,333,367,368,369,370,389,390,391,393,395,402,404,405,406,407,409,410,411,412,],[-11,137,-12,-210,137,-212,-214,-215,-225,-216,-217,-218,-219,-220,-221,137,-211,-213,137,137,-226,329,-237,-238,-239,-222,137,-224,-236,-240,-223,137,137,137,-227,-229,-230,137,137,137,-232,137,-234,137,-228,-231,-233,-235,]),'DO':([39,61,62,119,120,121,122,123,124,125,126,127,128,129,130,138,234,235,236,238,239,247,248,249,322,323,324,332,333,367,368,369,370,389,390,391,393,395,402,404,405,406,407,409,410,411,412,],[-11,138,-12,-210,138,-212,-214,-215,-225,-216,-217,-218,-219,-220,-221,138,-211,-213,138,138,-226,-237,-238,-239,-222,138,-224,-236,-240,-223,138,138,138,-227,-229,-230,138,138,138,-232,138,-234,138,-228,-231,-233,-235,]),'FOR':([39,61,62,119,120,121,122,123,124,125,126,127,128,129,130,138,234,235,236,238,239,247,248,249,322,323,324,332,333,367,368,369,370,389,390,391,393,395,402,404,405,406,407,409,410,411,412,],[-11,139,-12,-210,139,-212,-214,-215,-225,-216,-217,-218,-219,-220,-221,139,-211,-213,139,139,-226,-237,-238,-239,-222,139,-224,-236,-240,-223,139,139,139,-227,-229,-230,139,139,139,-232,139,-234,139,-228,-231,-233,-235,]),'GOTO':([39,61,62,119,120,121,122,123,124,125,126,127,128,129,130,138,234,235,236,238,239,247,248,249,322,323,324,332,333,367,368,369,370,389,390,391,393,395,402,404,405,406,407,409,410,411,412,],[-11,140,-12,-210,140,-212,-214,-215,-225,-216,-217,-218,-219,-220,-221,140,-211,-213,140,140,-226,-237,-238,-239,-222,140,-224,-236,-240,-223,140,140,140,-227,-229,-230,140,140,140,-232,140,-234,140,-228,-231,-233,-235,]),'CONTINUE':([39,61,62,119,120,121,122,123,124,125,126,127,128,129,130,138,234,235,236,238,239,247,248,249,322,323,324,332,333,367,368,369,370,389,390,391,393,395,402,404,405,406,407,409,410,411,412,],[-11,141,-12,-210,141,-212,-214,-215,-225,-216,-217,-218,-219,-220,-221,141,-211,-213,141,141,-226,-237,-238,-239,-222,141,-224,-236,-240,-223,141,141,141,-227,-229,-230,141,141,141,-232,141,-234,141,-228,-231,-233,-235,]),'BREAK':([39,61,62,119,120,121,122,123,124,125,126,127,128,129,130,138,234,235,236,238,239,247,248,249,322,323,324,332,333,367,368,369,370,389,390,391,393,395,402,404,405,406,407,409,410,411,412,],[-11,142,-12,-210,142,-212,-214,-215,-225,-216,-217,-218,-219,-220,-221,142,-211,-213,142,142,-226,-237,-238,-239,-222,142,-224,-236,-240,-223,142,142,142,-227,-229,-230,142,142,142,-232,142,-234,142,-228,-231,-233,-235,]),'RETURN':([39,61,62,119,120,121,122,123,124,125,126,127,128,129,130,138,234,235,236,238,239,247,248,249,322,323,324,332,333,367,368,369,370,389,390,391,393,395,402,404,405,406,407,409,410,411,412,],[-11,143,-12,-210,143,-212,-214,-215,-225,-216,-217,-218,-219,-220,-221,143,-211,-213,143,143,-226,-237,-238,-239,-222,143,-224,-236,-240,-223,143,143,143,-227,-229,-230,143,143,143,-232,143,-234,143,-228,-231,-233,-235,]),'<':([47,91,93,97,101,102,110,111,115,116,117,118,131,163,206,207,208,210,211,212,293,296,297,301,309,310,311,312,313,314,315,316,317,318,319,320,321,360,361,364,366,400,408,],[72,-139,-141,-135,-153,-163,-164,-165,223,-124,-129,-132,-163,-139,-159,-160,-142,-143,-144,-145,-155,-157,-158,-166,223,223,-125,-126,-127,-128,-130,-131,-133,-134,-136,-137,-138,-154,-156,-146,-140,-161,-162,]),'"':([47,165,167,351,],[73,-10,271,-9,]),'.':([89,93,101,102,110,111,131,165,184,185,206,207,283,286,288,293,296,297,301,358,360,361,365,400,401,408,],[187,204,-153,-163,-164,-165,-163,269,187,-202,-159,-160,187,-203,-205,-155,-157,-158,-166,-204,-154,-156,187,-161,187,-162,]),'/':([91,93,97,101,102,110,111,118,131,163,206,207,208,210,211,212,293,296,297,301,317,318,319,320,321,360,361,364,366,400,408,],[-139,-141,-135,-153,-163,-164,-165,232,-163,-139,-159,-160,-142,-143,-144,-145,-155,-157,-158,-166,232,232,-136,-137,-138,-154,-156,-146,-140,-161,-162,]),'%':([91,93,97,101,102,110,111,118,131,163,206,207,208,210,211,212,293,296,297,301,317,318,319,320,321,360,361,364,366,400,408,],[-139,-141,-135,-153,-163,-164,-165,233,-163,-139,-159,-160,-142,-143,-144,-145,-155,-157,-158,-166,233,233,-136,-137,-138,-154,-156,-146,-140,-161,-162,]),'LEFT_OP':([91,93,97,101,102,110,111,116,117,118,131,163,206,207,208,210,211,212,293,296,297,301,311,312,313,314,315,316,317,318,319,320,321,360,361,364,366,400,408,],[-139,-141,-135,-153,-163,-164,-165,227,-129,-132,-163,-139,-159,-160,-142,-143,-144,-145,-155,-157,-158,-166,227,227,227,227,-130,-131,-133,-134,-136,-137,-138,-154,-156,-146,-140,-161,-162,]),'RIGHT_OP':([91,93,97,101,102,110,111,116,117,118,131,163,206,207,208,210,211,212,293,296,297,301,311,312,313,314,315,316,317,318,319,320,321,360,361,364,366,400,408,],[-139,-141,-135,-153,-163,-164,-165,228,-129,-132,-163,-139,-159,-160,-142,-143,-144,-145,-155,-157,-158,-166,228,228,228,228,-130,-131,-133,-134,-136,-137,-138,-154,-156,-146,-140,-161,-162,]),'>':([91,93,97,101,102,110,111,115,116,117,118,131,163,165,166,206,207,208,210,211,212,293,296,297,301,309,310,311,312,313,314,315,316,317,318,319,320,321,351,360,361,364,366,400,408,],[-139,-141,-135,-153,-163,-164,-165,224,-124,-129,-132,-163,-139,-10,270,-159,-160,-142,-143,-144,-145,-155,-157,-158,-166,224,224,-125,-126,-127,-128,-130,-131,-133,-134,-136,-137,-138,-9,-154,-156,-146,-140,-161,-162,]),'LE_OP':([91,93,97,101,102,110,111,115,116,117,118,131,163,206,207,208,210,211,212,293,296,297,301,309,310,311,312,313,314,315,316,317,318,319,320,321,360,361,364,366,400,408,],[-139,-141,-135,-153,-163,-164,-165,225,-124,-129,-132,-163,-139,-159,-160,-142,-143,-144,-145,-155,-157,-158,-166,225,225,-125,-126,-127,-128,-130,-131,-133,-134,-136,-137,-138,-154,-156,-146,-140,-161,-162,]),'GE_OP':([91,93,97,101,102,110,111,115,116,117,118,131,163,206,207,208,210,211,212,293,296,297,301,309,310,311,312,313,314,315,316,317,318,319,320,321,360,361,364,366,400,408,],[-139,-141,-135,-153,-163,-164,-165,226,-124,-129,-132,-163,-139,-159,-160,-142,-143,-144,-145,-155,-157,-158,-166,226,226,-125,-126,-127,-128,-130,-131,-133,-134,-136,-137,-138,-154,-156,-146,-140,-161,-162,]),'EQ_OP':([91,93,97,101,102,110,111,114,115,116,117,118,131,163,206,207,208,210,211,212,293,296,297,301,308,309,310,311,312,313,314,315,316,317,318,319,320,321,360,361,364,366,400,408,],[-139,-141,-135,-153,-163,-164,-165,221,-121,-124,-129,-132,-163,-139,-159,-160,-142,-143,-144,-145,-155,-157,-158,-166,221,-122,-123,-125,-126,-127,-128,-130,-131,-133,-134,-136,-137,-138,-154,-156,-146,-140,-161,-162,]),'NE_OP':([91,93,97,101,102,110,111,114,115,116,117,118,131,163,206,207,208,210,211,212,293,296,297,301,308,309,310,311,312,313,314,315,316,317,318,319,320,321,360,361,364,366,400,408,],[-139,-141,-135,-153,-163,-164,-165,222,-121,-124,-129,-132,-163,-139,-159,-160,-142,-143,-144,-145,-155,-157,-158,-166,222,-122,-123,-125,-126,-127,-128,-130,-131,-133,-134,-136,-137,-138,-154,-156,-146,-140,-161,-162,]),'^':([91,93,97,101,102,110,111,112,113,114,115,116,117,118,131,163,206,207,208,210,211,212,293,296,297,301,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,360,361,364,366,400,408,],[-139,-141,-135,-153,-163,-164,-165,219,-117,-119,-121,-124,-129,-132,-163,-139,-159,-160,-142,-143,-144,-145,-155,-157,-158,-166,219,-118,-120,-122,-123,-125,-126,-127,-128,-130,-131,-133,-134,-136,-137,-138,-154,-156,-146,-140,-161,-162,]),'|':([91,93,97,101,102,109,110,111,112,113,114,115,116,117,118,131,163,206,207,208,210,211,212,293,296,297,301,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,360,361,364,366,400,408,],[-139,-141,-135,-153,-163,218,-164,-165,-115,-117,-119,-121,-124,-129,-132,-163,-139,-159,-160,-142,-143,-144,-145,-155,-157,-158,-166,218,-116,-118,-120,-122,-123,-125,-126,-127,-128,-130,-131,-133,-134,-136,-137,-138,-154,-156,-146,-140,-161,-162,]),'AND_OP':([91,93,97,100,101,102,109,110,111,112,113,114,115,116,117,118,131,163,206,207,208,210,211,212,291,293,296,297,301,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,360,361,364,366,400,408,],[-139,-141,-135,217,-153,-163,-113,-164,-165,-115,-117,-119,-121,-124,-129,-132,-163,-139,-159,-160,-142,-143,-144,-145,217,-155,-157,-158,-166,-114,-116,-118,-120,-122,-123,-125,-126,-127,-128,-130,-131,-133,-134,-136,-137,-138,-154,-156,-146,-140,-161,-162,]),'?':([91,92,93,97,100,101,102,109,110,111,112,113,114,115,116,117,118,131,163,206,207,208,210,211,212,291,293,296,297,301,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,360,361,364,366,400,408,],[-139,200,-141,-135,-111,-153,-163,-113,-164,-165,-115,-117,-119,-121,-124,-129,-132,-163,-139,-159,-160,-142,-143,-144,-145,-112,-155,-157,-158,-166,-114,-116,-118,-120,-122,-123,-125,-126,-127,-128,-130,-131,-133,-134,-136,-137,-138,-154,-156,-146,-140,-161,-162,]),'OR_OP':([91,92,93,97,100,101,102,109,110,111,112,113,114,115,116,117,118,131,163,206,207,208,210,211,212,291,293,296,297,301,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,360,361,364,366,400,408,],[-139,201,-141,-135,-111,-153,-163,-113,-164,-165,-115,-117,-119,-121,-124,-129,-132,-163,-139,-159,-160,-142,-143,-144,-145,-112,-155,-157,-158,-166,-114,-116,-118,-120,-122,-123,-125,-126,-127,-128,-130,-131,-133,-134,-136,-137,-138,-154,-156,-146,-140,-161,-162,]),'MUL_ASSIGN':([91,93,101,102,110,111,131,163,206,207,208,210,211,212,293,296,297,301,360,361,364,366,400,408,],[190,-141,-153,-163,-164,-165,-163,-139,-159,-160,-142,-143,-144,-145,-155,-157,-158,-166,-154,-156,-146,-140,-161,-162,]),'DIV_ASSIGN':([91,93,101,102,110,111,131,163,206,207,208,210,211,212,293,296,297,301,360,361,364,366,400,408,],[191,-141,-153,-163,-164,-165,-163,-139,-159,-160,-142,-143,-144,-145,-155,-157,-158,-166,-154,-156,-146,-140,-161,-162,]),'MOD_ASSIGN':([91,93,101,102,110,111,131,163,206,207,208,210,211,212,293,296,297,301,360,361,364,366,400,408,],[192,-141,-153,-163,-164,-165,-163,-139,-159,-160,-142,-143,-144,-145,-155,-157,-158,-166,-154,-156,-146,-140,-161,-162,]),'ADD_ASSIGN':([91,93,101,102,110,111,131,163,206,207,208,210,211,212,293,296,297,301,360,361,364,366,400,408,],[193,-141,-153,-163,-164,-165,-163,-139,-159,-160,-142,-143,-144,-145,-155,-157,-158,-166,-154,-156,-146,-140,-161,-162,]),'SUB_ASSIGN':([91,93,101,102,110,111,131,163,206,207,208,210,211,212,293,296,297,301,360,361,364,366,400,408,],[194,-141,-153,-163,-164,-165,-163,-139,-159,-160,-142,-143,-144,-145,-155,-157,-158,-166,-154,-156,-146,-140,-161,-162,]),'LEFT_ASSIGN':([91,93,101,102,110,111,131,163,206,207,208,210,211,212,293,296,297,301,360,361,364,366,400,408,],[195,-141,-153,-163,-164,-165,-163,-139,-159,-160,-142,-143,-144,-145,-155,-157,-158,-166,-154,-156,-146,-140,-161,-162,]),'RIGHT_ASSIGN':([91,93,101,102,110,111,131,163,206,207,208,210,211,212,293,296,297,301,360,361,364,366,400,408,],[196,-141,-153,-163,-164,-165,-163,-139,-159,-160,-142,-143,-144,-145,-155,-157,-158,-166,-154,-156,-146,-140,-161,-162,]),'AND_ASSIGN':([91,93,101,102,110,111,131,163,206,207,208,210,211,212,293,296,297,301,360,361,364,366,400,408,],[197,-141,-153,-163,-164,-165,-163,-139,-159,-160,-142,-143,-144,-145,-155,-157,-158,-166,-154,-156,-146,-140,-161,-162,]),'XOR_ASSIGN':([91,93,101,102,110,111,131,163,206,207,208,210,211,212,293,296,297,301,360,361,364,366,400,408,],[198,-141,-153,-163,-164,-165,-163,-139,-159,-160,-142,-143,-144,-145,-155,-157,-158,-166,-154,-156,-146,-140,-161,-162,]),'OR_ASSIGN':([91,93,101,102,110,111,131,163,206,207,208,210,211,212,293,296,297,301,360,361,364,366,400,408,],[199,-141,-153,-163,-164,-165,-163,-139,-159,-160,-142,-143,-144,-145,-155,-157,-158,-166,-154,-156,-146,-140,-161,-162,]),'PTR_OP':([93,101,102,110,111,131,206,207,293,296,297,301,360,361,400,408,],[205,-153,-163,-164,-165,-163,-159,-160,-155,-157,-158,-166,-154,-156,-161,-162,]),'ELSE':([119,124,125,126,127,128,129,130,234,239,247,248,249,322,324,332,333,367,389,390,391,404,406,409,410,411,412,],[-210,-225,-216,-217,-218,-219,-220,-221,-211,-226,-237,-238,-239,-222,-224,-236,-240,-223,402,-229,-230,-232,-234,-228,-231,-233,-235,]),'ELLIPSIS':([261,],[339,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'translation_unit':([0,],[1,]),'external_declaration':([0,1,],[2,37,]),'function_definition':([0,1,],[3,3,]),'declaration':([0,1,38,57,61,120,245,],[4,4,60,86,122,122,331,]),'macro':([0,1,],[5,5,]),'declaration_specifiers':([0,1,8,9,10,11,38,57,61,66,120,245,261,266,304,343,],[6,6,48,49,50,51,56,56,56,157,56,56,157,157,157,157,]),'storage_class_specifier':([0,1,8,9,10,11,38,57,61,66,120,245,261,266,304,343,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'type_specifier':([0,1,8,9,10,11,38,53,57,61,66,74,75,78,79,99,120,164,168,209,213,245,261,266,304,343,],[9,9,9,9,9,9,9,78,9,9,9,78,78,78,78,78,9,78,78,78,78,9,9,9,9,9,]),'type_qualifier':([0,1,8,9,10,11,38,44,53,57,61,65,66,67,74,75,78,79,99,120,146,149,164,168,209,213,245,256,261,266,304,343,],[10,10,10,10,10,10,10,69,79,10,10,69,10,159,79,79,79,79,79,10,159,69,79,79,79,79,10,159,10,10,10,10,]),'function_specifier':([0,1,8,9,10,11,38,57,61,66,120,245,261,266,304,343,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'struct_or_union_specifier':([0,1,8,9,10,11,38,53,57,61,66,74,75,78,79,99,120,164,168,209,213,245,261,266,304,343,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'enum_specifier':([0,1,8,9,10,11,38,53,57,61,66,74,75,78,79,99,120,164,168,209,213,245,261,266,304,343,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'struct_or_union':([0,1,8,9,10,11,38,53,57,61,66,74,75,78,79,99,120,164,168,209,213,245,261,266,304,343,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'declarator':([6,46,56,63,77,157,266,274,],[38,70,84,84,173,262,70,173,]),'init_declarator_list':([6,56,],[40,40,]),'pointer':([6,44,46,56,63,67,77,157,216,266,274,304,],[41,68,41,41,41,158,41,264,303,264,41,303,]),'direct_declarator':([6,41,46,56,63,77,157,264,266,274,],[42,64,42,42,42,42,42,64,42,42,]),'init_declarator':([6,56,63,],[43,43,145,]),'declaration_list':([38,],[57,]),'compound_statement':([38,57,61,120,138,236,238,323,368,369,370,393,395,402,405,407,],[58,85,126,126,126,126,126,126,126,126,126,126,126,126,126,126,]),'type_qualifier_list':([44,65,149,],[67,146,256,]),'struct_declaration_list':([53,74,],[75,168,]),'struct_declaration':([53,74,75,168,],[76,76,170,170,]),'specifier_qualifier_list':([53,74,75,78,79,99,164,168,209,213,],[77,77,77,175,176,216,216,77,216,216,]),'enumerator_list':([54,83,],[80,180,]),'enumerator':([54,83,178,281,],[81,81,278,278,]),'initializer':([59,89,183,283,357,365,401,],[87,182,284,356,385,182,356,]),'assignment_expression':([59,61,65,89,99,120,138,143,146,164,183,188,200,202,203,209,213,236,238,240,241,242,243,245,253,256,267,283,323,330,331,342,357,362,365,368,369,370,371,372,373,393,395,401,402,405,407,],[88,144,147,88,144,144,144,144,251,144,88,289,144,144,295,144,144,144,144,325,144,144,144,144,335,337,348,88,144,144,144,377,88,387,88,144,144,144,144,144,144,144,144,88,144,144,144,]),'conditional_expression':([59,61,65,71,89,99,120,132,138,143,146,164,174,179,183,186,188,200,202,203,209,213,236,238,240,241,242,243,245,253,256,267,275,283,323,330,331,342,357,359,362,365,368,369,370,371,372,373,393,395,401,402,405,407,],[90,90,90,162,90,90,90,162,90,90,90,90,162,162,90,162,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,162,90,90,90,90,90,90,386,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'unary_expression':([59,61,65,71,89,94,95,96,98,99,120,132,138,143,146,164,174,179,183,186,188,200,201,202,203,209,213,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,236,238,240,241,242,243,245,253,256,267,275,283,300,323,330,331,342,350,357,359,362,365,368,369,370,371,372,373,393,395,401,402,405,407,],[91,91,91,163,91,208,210,163,212,91,91,163,91,91,91,91,163,163,91,163,91,91,163,91,91,91,91,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,91,91,91,91,91,91,91,91,91,91,163,91,163,91,91,91,91,163,91,163,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'logical_or_expression':([59,61,65,71,89,99,120,132,138,143,146,164,174,179,183,186,188,200,202,203,209,213,236,238,240,241,242,243,245,253,256,267,275,283,323,330,331,342,357,359,362,365,368,369,370,371,372,373,393,395,401,402,405,407,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'postfix_expression':([59,61,65,71,89,94,95,96,98,99,120,132,138,143,146,164,174,179,183,186,188,200,201,202,203,209,213,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,236,238,240,241,242,243,245,253,256,267,275,283,300,323,330,331,342,350,357,359,362,365,368,369,370,371,372,373,393,395,401,402,405,407,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'unary_operator':([59,61,65,71,89,94,95,96,98,99,120,132,138,143,146,164,174,179,183,186,188,200,201,202,203,209,213,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,236,238,240,241,242,243,245,253,256,267,275,283,300,323,330,331,342,350,357,359,362,365,368,369,370,371,372,373,393,395,401,402,405,407,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'cast_expression':([59,61,65,71,89,96,99,120,132,138,143,146,164,174,179,183,186,188,200,201,202,203,209,213,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,236,238,240,241,242,243,245,253,256,267,275,283,300,323,330,331,342,350,357,359,362,365,368,369,370,371,372,373,393,395,401,402,405,407,],[97,97,97,97,97,211,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,319,320,321,97,97,97,97,97,97,97,97,97,97,97,97,366,97,97,97,97,366,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'logical_and_expression':([59,61,65,71,89,99,120,132,138,143,146,164,174,179,183,186,188,200,201,202,203,209,213,236,238,240,241,242,243,245,253,256,267,275,283,323,330,331,342,357,359,362,365,368,369,370,371,372,373,393,395,401,402,405,407,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,291,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'primary_expression':([59,61,65,71,89,94,95,96,98,99,120,132,138,143,146,164,174,179,183,186,188,200,201,202,203,209,213,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,236,238,240,241,242,243,245,253,256,267,275,283,300,323,330,331,342,350,357,359,362,365,368,369,370,371,372,373,393,395,401,402,405,407,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'inclusive_or_expression':([59,61,65,71,89,99,120,132,138,143,146,164,174,179,183,186,188,200,201,202,203,209,213,217,236,238,240,241,242,243,245,253,256,267,275,283,323,330,331,342,357,359,362,365,368,369,370,371,372,373,393,395,401,402,405,407,],[109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,305,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,]),'exclusive_or_expression':([59,61,65,71,89,99,120,132,138,143,146,164,174,179,183,186,188,200,201,202,203,209,213,217,218,236,238,240,241,242,243,245,253,256,267,275,283,323,330,331,342,357,359,362,365,368,369,370,371,372,373,393,395,401,402,405,407,],[112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,306,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,]),'and_expression':([59,61,65,71,89,99,120,132,138,143,146,164,174,179,183,186,188,200,201,202,203,209,213,217,218,219,236,238,240,241,242,243,245,253,256,267,275,283,323,330,331,342,357,359,362,365,368,369,370,371,372,373,393,395,401,402,405,407,],[113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,307,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'equality_expression':([59,61,65,71,89,99,120,132,138,143,146,164,174,179,183,186,188,200,201,202,203,209,213,217,218,219,220,236,238,240,241,242,243,245,253,256,267,275,283,323,330,331,342,357,359,362,365,368,369,370,371,372,373,393,395,401,402,405,407,],[114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,308,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'relational_expression':([59,61,65,71,89,99,120,132,138,143,146,164,174,179,183,186,188,200,201,202,203,209,213,217,218,219,220,221,222,236,238,240,241,242,243,245,253,256,267,275,283,323,330,331,342,357,359,362,365,368,369,370,371,372,373,393,395,401,402,405,407,],[115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,309,310,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,]),'shift_expression':([59,61,65,71,89,99,120,132,138,143,146,164,174,179,183,186,188,200,201,202,203,209,213,217,218,219,220,221,222,223,224,225,226,236,238,240,241,242,243,245,253,256,267,275,283,323,330,331,342,357,359,362,365,368,369,370,371,372,373,393,395,401,402,405,407,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,311,312,313,314,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,]),'additive_expression':([59,61,65,71,89,99,120,132,138,143,146,164,174,179,183,186,188,200,201,202,203,209,213,217,218,219,220,221,222,223,224,225,226,227,228,236,238,240,241,242,243,245,253,256,267,275,283,323,330,331,342,357,359,362,365,368,369,370,371,372,373,393,395,401,402,405,407,],[117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,315,316,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,]),'multiplicative_expression':([59,61,65,71,89,99,120,132,138,143,146,164,174,179,183,186,188,200,201,202,203,209,213,217,218,219,220,221,222,223,224,225,226,227,228,229,230,236,238,240,241,242,243,245,253,256,267,275,283,323,330,331,342,357,359,362,365,368,369,370,371,372,373,393,395,401,402,405,407,],[118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,317,318,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,]),'block_item_list':([61,],[120,]),'block_item':([61,120,],[121,235,]),'statement':([61,120,138,236,238,323,368,369,370,393,395,402,405,407,],[123,123,244,322,324,367,389,390,391,404,406,409,411,412,]),'labeled_statement':([61,120,138,236,238,323,368,369,370,393,395,402,405,407,],[125,125,125,125,125,125,125,125,125,125,125,125,125,125,]),'expression_statement':([61,120,138,236,238,245,323,330,331,368,369,370,393,395,402,405,407,],[127,127,127,127,127,330,127,372,373,127,127,127,127,127,127,127,127,]),'selection_statement':([61,120,138,236,238,323,368,369,370,393,395,402,405,407,],[128,128,128,128,128,128,128,128,128,128,128,128,128,128,]),'iteration_statement':([61,120,138,236,238,323,368,369,370,393,395,402,405,407,],[129,129,129,129,129,129,129,129,129,129,129,129,129,129,]),'jump_statement':([61,120,138,236,238,323,368,369,370,393,395,402,405,407,],[130,130,130,130,130,130,130,130,130,130,130,130,130,130,]),'expression':([61,99,120,138,143,164,200,202,209,213,236,238,241,242,243,245,323,330,331,368,369,370,371,372,373,393,395,402,405,407,],[134,215,134,134,250,215,290,292,215,215,134,134,326,327,328,134,134,134,134,134,134,134,392,394,396,134,134,134,134,134,]),'parameter_type_list':([66,266,304,343,],[151,346,346,380,]),'identifier_list':([66,],[153,]),'parameter_list':([66,266,304,343,],[154,154,154,154,]),'parameter_declaration':([66,261,266,304,343,],[156,340,156,156,156,]),'constant_expression':([71,132,174,179,186,275,],[161,237,276,279,287,353,]),'headfile':([72,73,],[166,167,]),'struct_declarator_list':([77,],[171,]),'struct_declarator':([77,274,],[172,352,]),'initializer_list':([89,365,],[181,388,]),'designation':([89,283,365,401,],[183,357,183,357,]),'designator_list':([89,283,365,401,],[184,184,184,184,]),'designator':([89,184,283,365,401,],[185,286,185,185,185,]),'assignment_operator':([91,],[188,]),'type_name':([99,164,209,213,],[214,268,298,299,]),'abstract_declarator':([157,216,266,304,],[263,302,345,345,]),'direct_abstract_declarator':([157,216,264,266,303,304,],[265,265,341,265,341,265,]),'argument_expression_list':([203,],[294,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> translation_unit","S'",1,None,None,None),
  ('translation_unit -> external_declaration','translation_unit',1,'p_translation_unit','syntax.py',50),
  ('translation_unit -> translation_unit external_declaration','translation_unit',2,'p_translation_unit','syntax.py',51),
  ('external_declaration -> function_definition','external_declaration',1,'p_external_declaration','syntax.py',56),
  ('external_declaration -> declaration','external_declaration',1,'p_external_declaration','syntax.py',57),
  ('external_declaration -> macro','external_declaration',1,'p_external_declaration','syntax.py',58),
  ('macro -> MACRO IDENTIFIER IDENTIFIER constant_expression','macro',4,'p_macro','syntax.py',63),
  ('macro -> MACRO IDENTIFIER < headfile >','macro',5,'p_macro','syntax.py',64),
  ('macro -> MACRO IDENTIFIER " headfile "','macro',5,'p_macro','syntax.py',65),
  ('headfile -> IDENTIFIER . IDENTIFIER','headfile',3,'p_headfile','syntax.py',72),
  ('headfile -> IDENTIFIER','headfile',1,'p_headfile','syntax.py',73),
  ('declaration -> declaration_specifiers ;','declaration',2,'p_declaration','syntax.py',78),
  ('declaration -> declaration_specifiers init_declarator_list ;','declaration',3,'p_declaration','syntax.py',79),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list','syntax.py',84),
  ('init_declarator_list -> init_declarator_list , init_declarator','init_declarator_list',3,'p_init_declarator_list','syntax.py',85),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator','syntax.py',90),
  ('init_declarator -> declarator = initializer','init_declarator',3,'p_init_declarator','syntax.py',91),
  ('declaration_specifiers -> storage_class_specifier','declaration_specifiers',1,'p_declaration_specifiers','syntax.py',96),
  ('declaration_specifiers -> storage_class_specifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers','syntax.py',97),
  ('declaration_specifiers -> type_specifier','declaration_specifiers',1,'p_declaration_specifiers','syntax.py',98),
  ('declaration_specifiers -> type_specifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers','syntax.py',99),
  ('declaration_specifiers -> type_qualifier','declaration_specifiers',1,'p_declaration_specifiers','syntax.py',100),
  ('declaration_specifiers -> type_qualifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers','syntax.py',101),
  ('declaration_specifiers -> function_specifier','declaration_specifiers',1,'p_declaration_specifiers','syntax.py',102),
  ('declaration_specifiers -> function_specifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers','syntax.py',103),
  ('storage_class_specifier -> TYPEDEF','storage_class_specifier',1,'p_storage_class_specifier','syntax.py',108),
  ('storage_class_specifier -> EXTERN','storage_class_specifier',1,'p_storage_class_specifier','syntax.py',109),
  ('storage_class_specifier -> STATIC','storage_class_specifier',1,'p_storage_class_specifier','syntax.py',110),
  ('storage_class_specifier -> AUTO','storage_class_specifier',1,'p_storage_class_specifier','syntax.py',111),
  ('storage_class_specifier -> REGISTER','storage_class_specifier',1,'p_storage_class_specifier','syntax.py',112),
  ('function_specifier -> INLINE','function_specifier',1,'p_function_specifier','syntax.py',117),
  ('type_specifier -> VOID','type_specifier',1,'p_type_specifier','syntax.py',122),
  ('type_specifier -> CHAR','type_specifier',1,'p_type_specifier','syntax.py',123),
  ('type_specifier -> SHORT','type_specifier',1,'p_type_specifier','syntax.py',124),
  ('type_specifier -> INT','type_specifier',1,'p_type_specifier','syntax.py',125),
  ('type_specifier -> LONG','type_specifier',1,'p_type_specifier','syntax.py',126),
  ('type_specifier -> FLOAT','type_specifier',1,'p_type_specifier','syntax.py',127),
  ('type_specifier -> DOUBLE','type_specifier',1,'p_type_specifier','syntax.py',128),
  ('type_specifier -> SIGNED','type_specifier',1,'p_type_specifier','syntax.py',129),
  ('type_specifier -> UNSIGNED','type_specifier',1,'p_type_specifier','syntax.py',130),
  ('type_specifier -> BOOL','type_specifier',1,'p_type_specifier','syntax.py',131),
  ('type_specifier -> struct_or_union_specifier','type_specifier',1,'p_type_specifier','syntax.py',132),
  ('type_specifier -> enum_specifier','type_specifier',1,'p_type_specifier','syntax.py',133),
  ('type_qualifier -> CONST','type_qualifier',1,'p_type_qualifier','syntax.py',138),
  ('type_qualifier -> RESTRICT','type_qualifier',1,'p_type_qualifier','syntax.py',139),
  ('type_qualifier -> VOLATILE','type_qualifier',1,'p_type_qualifier','syntax.py',140),
  ('enum_specifier -> ENUM { enumerator_list }','enum_specifier',4,'p_enum_specifier','syntax.py',145),
  ('enum_specifier -> ENUM IDENTIFIER { enumerator_list }','enum_specifier',5,'p_enum_specifier','syntax.py',146),
  ('enum_specifier -> ENUM { enumerator_list , }','enum_specifier',5,'p_enum_specifier','syntax.py',147),
  ('enum_specifier -> ENUM IDENTIFIER { enumerator_list , }','enum_specifier',6,'p_enum_specifier','syntax.py',148),
  ('enum_specifier -> ENUM IDENTIFIER','enum_specifier',2,'p_enum_specifier','syntax.py',149),
  ('enumerator_list -> enumerator','enumerator_list',1,'p_enumerator_list','syntax.py',156),
  ('enumerator_list -> enumerator_list , enumerator','enumerator_list',3,'p_enumerator_list','syntax.py',157),
  ('enumerator -> IDENTIFIER','enumerator',1,'p_enumerator','syntax.py',162),
  ('enumerator -> IDENTIFIER = constant_expression','enumerator',3,'p_enumerator','syntax.py',163),
  ('struct_or_union_specifier -> struct_or_union IDENTIFIER { struct_declaration_list }','struct_or_union_specifier',5,'p_struct_or_union_specifier','syntax.py',170),
  ('struct_or_union_specifier -> struct_or_union { struct_declaration_list }','struct_or_union_specifier',4,'p_struct_or_union_specifier','syntax.py',171),
  ('struct_or_union_specifier -> struct_or_union IDENTIFIER','struct_or_union_specifier',2,'p_struct_or_union_specifier','syntax.py',172),
  ('struct_or_union -> STRUCT','struct_or_union',1,'p_struct_or_union','syntax.py',179),
  ('struct_or_union -> UNION','struct_or_union',1,'p_struct_or_union','syntax.py',180),
  ('struct_declaration_list -> struct_declaration','struct_declaration_list',1,'p_struct_declaration_list','syntax.py',185),
  ('struct_declaration_list -> struct_declaration_list struct_declaration','struct_declaration_list',2,'p_struct_declaration_list','syntax.py',186),
  ('struct_declaration -> specifier_qualifier_list struct_declarator_list ;','struct_declaration',3,'p_struct_declaration','syntax.py',191),
  ('specifier_qualifier_list -> type_specifier specifier_qualifier_list','specifier_qualifier_list',2,'p_specifier_qualifier_list','syntax.py',196),
  ('specifier_qualifier_list -> type_specifier','specifier_qualifier_list',1,'p_specifier_qualifier_list','syntax.py',197),
  ('specifier_qualifier_list -> type_qualifier specifier_qualifier_list','specifier_qualifier_list',2,'p_specifier_qualifier_list','syntax.py',198),
  ('specifier_qualifier_list -> type_qualifier','specifier_qualifier_list',1,'p_specifier_qualifier_list','syntax.py',199),
  ('struct_declarator_list -> struct_declarator','struct_declarator_list',1,'p_struct_declarator_list','syntax.py',204),
  ('struct_declarator_list -> struct_declarator_list , struct_declarator','struct_declarator_list',3,'p_struct_declarator_list','syntax.py',205),
  ('struct_declarator -> declarator','struct_declarator',1,'p_struct_declarator','syntax.py',210),
  ('struct_declarator -> : constant_expression','struct_declarator',2,'p_struct_declarator','syntax.py',211),
  ('struct_declarator -> declarator : constant_expression','struct_declarator',3,'p_struct_declarator','syntax.py',212),
  ('declarator -> pointer direct_declarator','declarator',2,'p_declarator','syntax.py',217),
  ('declarator -> direct_declarator','declarator',1,'p_declarator','syntax.py',218),
  ('pointer -> *','pointer',1,'p_pointer','syntax.py',223),
  ('pointer -> * type_qualifier_list','pointer',2,'p_pointer','syntax.py',224),
  ('pointer -> * pointer','pointer',2,'p_pointer','syntax.py',225),
  ('pointer -> * type_qualifier_list pointer','pointer',3,'p_pointer','syntax.py',226),
  ('type_qualifier_list -> type_qualifier','type_qualifier_list',1,'p_type_qualifier_list','syntax.py',231),
  ('type_qualifier_list -> type_qualifier_list type_qualifier','type_qualifier_list',2,'p_type_qualifier_list','syntax.py',232),
  ('direct_declarator -> IDENTIFIER','direct_declarator',1,'p_direct_declarator','syntax.py',237),
  ('direct_declarator -> ( declarator )','direct_declarator',3,'p_direct_declarator','syntax.py',238),
  ('direct_declarator -> direct_declarator [ type_qualifier_list assignment_expression ]','direct_declarator',5,'p_direct_declarator','syntax.py',239),
  ('direct_declarator -> direct_declarator [ type_qualifier_list ]','direct_declarator',4,'p_direct_declarator','syntax.py',240),
  ('direct_declarator -> direct_declarator [ assignment_expression ]','direct_declarator',4,'p_direct_declarator','syntax.py',241),
  ('direct_declarator -> direct_declarator [ STATIC type_qualifier_list assignment_expression ]','direct_declarator',6,'p_direct_declarator','syntax.py',242),
  ('direct_declarator -> direct_declarator [ type_qualifier_list STATIC assignment_expression ]','direct_declarator',6,'p_direct_declarator','syntax.py',243),
  ('direct_declarator -> direct_declarator [ type_qualifier_list * ]','direct_declarator',5,'p_direct_declarator','syntax.py',244),
  ('direct_declarator -> direct_declarator [ * ]','direct_declarator',4,'p_direct_declarator','syntax.py',245),
  ('direct_declarator -> direct_declarator [ ]','direct_declarator',3,'p_direct_declarator','syntax.py',246),
  ('direct_declarator -> direct_declarator ( parameter_type_list )','direct_declarator',4,'p_direct_declarator','syntax.py',247),
  ('direct_declarator -> direct_declarator ( identifier_list )','direct_declarator',4,'p_direct_declarator','syntax.py',248),
  ('direct_declarator -> direct_declarator ( )','direct_declarator',3,'p_direct_declarator','syntax.py',249),
  ('identifier_list -> IDENTIFIER','identifier_list',1,'p_identifier_list','syntax.py',256),
  ('identifier_list -> identifier_list , IDENTIFIER','identifier_list',3,'p_identifier_list','syntax.py',257),
  ('assignment_expression -> conditional_expression','assignment_expression',1,'p_assignment_expression','syntax.py',266),
  ('assignment_expression -> unary_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression','syntax.py',267),
  ('assignment_operator -> =','assignment_operator',1,'p_assignment_operator','syntax.py',272),
  ('assignment_operator -> MUL_ASSIGN','assignment_operator',1,'p_assignment_operator','syntax.py',273),
  ('assignment_operator -> DIV_ASSIGN','assignment_operator',1,'p_assignment_operator','syntax.py',274),
  ('assignment_operator -> MOD_ASSIGN','assignment_operator',1,'p_assignment_operator','syntax.py',275),
  ('assignment_operator -> ADD_ASSIGN','assignment_operator',1,'p_assignment_operator','syntax.py',276),
  ('assignment_operator -> SUB_ASSIGN','assignment_operator',1,'p_assignment_operator','syntax.py',277),
  ('assignment_operator -> LEFT_ASSIGN','assignment_operator',1,'p_assignment_operator','syntax.py',278),
  ('assignment_operator -> RIGHT_ASSIGN','assignment_operator',1,'p_assignment_operator','syntax.py',279),
  ('assignment_operator -> AND_ASSIGN','assignment_operator',1,'p_assignment_operator','syntax.py',280),
  ('assignment_operator -> XOR_ASSIGN','assignment_operator',1,'p_assignment_operator','syntax.py',281),
  ('assignment_operator -> OR_ASSIGN','assignment_operator',1,'p_assignment_operator','syntax.py',282),
  ('constant_expression -> conditional_expression','constant_expression',1,'p_constant_expression','syntax.py',287),
  ('conditional_expression -> logical_or_expression','conditional_expression',1,'p_conditional_expression','syntax.py',292),
  ('conditional_expression -> logical_or_expression ? expression : conditional_expression','conditional_expression',5,'p_conditional_expression','syntax.py',293),
  ('logical_or_expression -> logical_and_expression','logical_or_expression',1,'p_logical_or_expression','syntax.py',298),
  ('logical_or_expression -> logical_or_expression OR_OP logical_and_expression','logical_or_expression',3,'p_logical_or_expression','syntax.py',299),
  ('logical_and_expression -> inclusive_or_expression','logical_and_expression',1,'p_logical_and_expression','syntax.py',304),
  ('logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression','logical_and_expression',3,'p_logical_and_expression','syntax.py',305),
  ('inclusive_or_expression -> exclusive_or_expression','inclusive_or_expression',1,'p_inclusive_or_expression','syntax.py',310),
  ('inclusive_or_expression -> inclusive_or_expression | exclusive_or_expression','inclusive_or_expression',3,'p_inclusive_or_expression','syntax.py',311),
  ('exclusive_or_expression -> and_expression','exclusive_or_expression',1,'p_exclusive_or_expression','syntax.py',316),
  ('exclusive_or_expression -> exclusive_or_expression ^ and_expression','exclusive_or_expression',3,'p_exclusive_or_expression','syntax.py',317),
  ('and_expression -> equality_expression','and_expression',1,'p_and_expression','syntax.py',322),
  ('and_expression -> and_expression & equality_expression','and_expression',3,'p_and_expression','syntax.py',323),
  ('equality_expression -> relational_expression','equality_expression',1,'p_equality_expression','syntax.py',328),
  ('equality_expression -> equality_expression EQ_OP relational_expression','equality_expression',3,'p_equality_expression','syntax.py',329),
  ('equality_expression -> equality_expression NE_OP relational_expression','equality_expression',3,'p_equality_expression','syntax.py',330),
  ('relational_expression -> shift_expression','relational_expression',1,'p_relational_expression','syntax.py',335),
  ('relational_expression -> relational_expression < shift_expression','relational_expression',3,'p_relational_expression','syntax.py',336),
  ('relational_expression -> relational_expression > shift_expression','relational_expression',3,'p_relational_expression','syntax.py',337),
  ('relational_expression -> relational_expression LE_OP shift_expression','relational_expression',3,'p_relational_expression','syntax.py',338),
  ('relational_expression -> relational_expression GE_OP shift_expression','relational_expression',3,'p_relational_expression','syntax.py',339),
  ('shift_expression -> additive_expression','shift_expression',1,'p_shift_expression','syntax.py',344),
  ('shift_expression -> shift_expression LEFT_OP additive_expression','shift_expression',3,'p_shift_expression','syntax.py',345),
  ('shift_expression -> shift_expression RIGHT_OP additive_expression','shift_expression',3,'p_shift_expression','syntax.py',346),
  ('additive_expression -> multiplicative_expression','additive_expression',1,'p_additive_expression','syntax.py',351),
  ('additive_expression -> additive_expression + multiplicative_expression','additive_expression',3,'p_additive_expression','syntax.py',352),
  ('additive_expression -> additive_expression - multiplicative_expression','additive_expression',3,'p_additive_expression','syntax.py',353),
  ('multiplicative_expression -> cast_expression','multiplicative_expression',1,'p_multiplicative_expression','syntax.py',358),
  ('multiplicative_expression -> multiplicative_expression * cast_expression','multiplicative_expression',3,'p_multiplicative_expression','syntax.py',359),
  ('multiplicative_expression -> multiplicative_expression / cast_expression','multiplicative_expression',3,'p_multiplicative_expression','syntax.py',360),
  ('multiplicative_expression -> multiplicative_expression % cast_expression','multiplicative_expression',3,'p_multiplicative_expression','syntax.py',361),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression','syntax.py',366),
  ('cast_expression -> ( type_name ) cast_expression','cast_expression',4,'p_cast_expression','syntax.py',367),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression','syntax.py',372),
  ('unary_expression -> INC_OP unary_expression','unary_expression',2,'p_unary_expression','syntax.py',373),
  ('unary_expression -> DEC_OP unary_expression','unary_expression',2,'p_unary_expression','syntax.py',374),
  ('unary_expression -> unary_operator cast_expression','unary_expression',2,'p_unary_expression','syntax.py',375),
  ('unary_expression -> SIZEOF unary_expression','unary_expression',2,'p_unary_expression','syntax.py',376),
  ('unary_expression -> SIZEOF ( type_name )','unary_expression',4,'p_unary_expression','syntax.py',377),
  ('unary_operator -> &','unary_operator',1,'p_unary_operator','syntax.py',382),
  ('unary_operator -> *','unary_operator',1,'p_unary_operator','syntax.py',383),
  ('unary_operator -> +','unary_operator',1,'p_unary_operator','syntax.py',384),
  ('unary_operator -> -','unary_operator',1,'p_unary_operator','syntax.py',385),
  ('unary_operator -> ~','unary_operator',1,'p_unary_operator','syntax.py',386),
  ('unary_operator -> !','unary_operator',1,'p_unary_operator','syntax.py',387),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression','syntax.py',392),
  ('postfix_expression -> postfix_expression [ expression ]','postfix_expression',4,'p_postfix_expression','syntax.py',393),
  ('postfix_expression -> postfix_expression ( )','postfix_expression',3,'p_postfix_expression','syntax.py',394),
  ('postfix_expression -> postfix_expression ( argument_expression_list )','postfix_expression',4,'p_postfix_expression','syntax.py',395),
  ('postfix_expression -> postfix_expression . IDENTIFIER','postfix_expression',3,'p_postfix_expression','syntax.py',396),
  ('postfix_expression -> postfix_expression PTR_OP IDENTIFIER','postfix_expression',3,'p_postfix_expression','syntax.py',397),
  ('postfix_expression -> postfix_expression INC_OP','postfix_expression',2,'p_postfix_expression','syntax.py',398),
  ('postfix_expression -> postfix_expression DEC_OP','postfix_expression',2,'p_postfix_expression','syntax.py',399),
  ('postfix_expression -> ( type_name ) { initializer_list }','postfix_expression',6,'p_postfix_expression','syntax.py',400),
  ('postfix_expression -> ( type_name ) { initializer_list , }','postfix_expression',7,'p_postfix_expression','syntax.py',401),
  ('primary_expression -> IDENTIFIER','primary_expression',1,'p_primary_expression','syntax.py',408),
  ('primary_expression -> CONSTANT','primary_expression',1,'p_primary_expression','syntax.py',409),
  ('primary_expression -> STRING_LITERAL','primary_expression',1,'p_primary_expression','syntax.py',410),
  ('primary_expression -> ( expression )','primary_expression',3,'p_primary_expression','syntax.py',411),
  ('expression -> assignment_expression','expression',1,'p_expression','syntax.py',418),
  ('expression -> expression , assignment_expression','expression',3,'p_expression','syntax.py',419),
  ('type_name -> specifier_qualifier_list','type_name',1,'p_type_name','syntax.py',424),
  ('type_name -> specifier_qualifier_list abstract_declarator','type_name',2,'p_type_name','syntax.py',425),
  ('abstract_declarator -> pointer','abstract_declarator',1,'p_abstract_declarator','syntax.py',430),
  ('abstract_declarator -> direct_abstract_declarator','abstract_declarator',1,'p_abstract_declarator','syntax.py',431),
  ('abstract_declarator -> pointer direct_abstract_declarator','abstract_declarator',2,'p_abstract_declarator','syntax.py',432),
  ('direct_abstract_declarator -> ( abstract_declarator )','direct_abstract_declarator',3,'p_direct_abstract_declarator','syntax.py',437),
  ('direct_abstract_declarator -> [ ]','direct_abstract_declarator',2,'p_direct_abstract_declarator','syntax.py',438),
  ('direct_abstract_declarator -> [ assignment_expression ]','direct_abstract_declarator',3,'p_direct_abstract_declarator','syntax.py',439),
  ('direct_abstract_declarator -> direct_abstract_declarator [ ]','direct_abstract_declarator',3,'p_direct_abstract_declarator','syntax.py',440),
  ('direct_abstract_declarator -> direct_abstract_declarator [ assignment_expression ]','direct_abstract_declarator',4,'p_direct_abstract_declarator','syntax.py',441),
  ('direct_abstract_declarator -> [ * ]','direct_abstract_declarator',3,'p_direct_abstract_declarator','syntax.py',442),
  ('direct_abstract_declarator -> direct_abstract_declarator [ * ]','direct_abstract_declarator',4,'p_direct_abstract_declarator','syntax.py',443),
  ('direct_abstract_declarator -> ( )','direct_abstract_declarator',2,'p_direct_abstract_declarator','syntax.py',444),
  ('direct_abstract_declarator -> ( parameter_type_list )','direct_abstract_declarator',3,'p_direct_abstract_declarator','syntax.py',445),
  ('direct_abstract_declarator -> direct_abstract_declarator ( )','direct_abstract_declarator',3,'p_direct_abstract_declarator','syntax.py',446),
  ('direct_abstract_declarator -> direct_abstract_declarator ( parameter_type_list )','direct_abstract_declarator',4,'p_direct_abstract_declarator','syntax.py',447),
  ('parameter_type_list -> parameter_list','parameter_type_list',1,'p_parameter_type_list','syntax.py',453),
  ('parameter_type_list -> parameter_list , ELLIPSIS','parameter_type_list',3,'p_parameter_type_list','syntax.py',454),
  ('parameter_list -> parameter_declaration','parameter_list',1,'p_parameter_list','syntax.py',459),
  ('parameter_list -> parameter_list , parameter_declaration','parameter_list',3,'p_parameter_list','syntax.py',460),
  ('parameter_declaration -> declaration_specifiers declarator','parameter_declaration',2,'p_parameter_declaration','syntax.py',465),
  ('parameter_declaration -> declaration_specifiers abstract_declarator','parameter_declaration',2,'p_parameter_declaration','syntax.py',466),
  ('parameter_declaration -> declaration_specifiers','parameter_declaration',1,'p_parameter_declaration','syntax.py',467),
  ('argument_expression_list -> assignment_expression','argument_expression_list',1,'p_argument_expression_list','syntax.py',472),
  ('argument_expression_list -> argument_expression_list , assignment_expression','argument_expression_list',3,'p_argument_expression_list','syntax.py',473),
  ('initializer_list -> initializer','initializer_list',1,'p_initializer_list','syntax.py',478),
  ('initializer_list -> designation initializer','initializer_list',2,'p_initializer_list','syntax.py',479),
  ('initializer_list -> initializer_list , initializer','initializer_list',3,'p_initializer_list','syntax.py',480),
  ('initializer_list -> initializer_list , designation initializer','initializer_list',4,'p_initializer_list','syntax.py',481),
  ('initializer -> assignment_expression','initializer',1,'p_initializer','syntax.py',486),
  ('initializer -> { initializer_list }','initializer',3,'p_initializer','syntax.py',487),
  ('initializer -> { initializer_list , }','initializer',4,'p_initializer','syntax.py',488),
  ('designation -> designator_list =','designation',2,'p_designation','syntax.py',492),
  ('designator_list -> designator','designator_list',1,'p_designator_list','syntax.py',497),
  ('designator_list -> designator_list designator','designator_list',2,'p_designator_list','syntax.py',498),
  ('designator -> [ constant_expression ]','designator',3,'p_designator','syntax.py',504),
  ('designator -> . IDENTIFIER','designator',2,'p_designator','syntax.py',505),
  ('function_definition -> declaration_specifiers declarator declaration_list compound_statement','function_definition',4,'p_function_definition','syntax.py',512),
  ('function_definition -> declaration_specifiers declarator compound_statement','function_definition',3,'p_function_definition','syntax.py',513),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','syntax.py',518),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','syntax.py',519),
  ('compound_statement -> { }','compound_statement',2,'p_compound_statement','syntax.py',524),
  ('compound_statement -> { block_item_list }','compound_statement',3,'p_compound_statement','syntax.py',525),
  ('block_item_list -> block_item','block_item_list',1,'p_block_item_list','syntax.py',530),
  ('block_item_list -> block_item_list block_item','block_item_list',2,'p_block_item_list','syntax.py',531),
  ('block_item -> declaration','block_item',1,'p_block_item','syntax.py',536),
  ('block_item -> statement','block_item',1,'p_block_item','syntax.py',537),
  ('statement -> labeled_statement','statement',1,'p_statement','syntax.py',542),
  ('statement -> compound_statement','statement',1,'p_statement','syntax.py',543),
  ('statement -> expression_statement','statement',1,'p_statement','syntax.py',544),
  ('statement -> selection_statement','statement',1,'p_statement','syntax.py',545),
  ('statement -> iteration_statement','statement',1,'p_statement','syntax.py',546),
  ('statement -> jump_statement','statement',1,'p_statement','syntax.py',547),
  ('labeled_statement -> IDENTIFIER : statement','labeled_statement',3,'p_labeled_statement','syntax.py',552),
  ('labeled_statement -> CASE constant_expression : statement','labeled_statement',4,'p_labeled_statement','syntax.py',553),
  ('labeled_statement -> DEFAULT : statement','labeled_statement',3,'p_labeled_statement','syntax.py',554),
  ('expression_statement -> ;','expression_statement',1,'p_expression_statement','syntax.py',561),
  ('expression_statement -> expression ;','expression_statement',2,'p_expression_statement','syntax.py',562),
  ('selection_statement -> IF ( expression ) statement','selection_statement',5,'p_selection_statement','syntax.py',567),
  ('selection_statement -> IF ( expression ) statement ELSE statement','selection_statement',7,'p_selection_statement','syntax.py',568),
  ('selection_statement -> SWITCH ( expression ) statement','selection_statement',5,'p_selection_statement','syntax.py',569),
  ('iteration_statement -> WHILE ( expression ) statement','iteration_statement',5,'p_iteration_statement','syntax.py',574),
  ('iteration_statement -> DO statement WHILE ( expression ) ;','iteration_statement',7,'p_iteration_statement','syntax.py',575),
  ('iteration_statement -> FOR ( expression_statement expression_statement ) statement','iteration_statement',6,'p_iteration_statement','syntax.py',576),
  ('iteration_statement -> FOR ( expression_statement expression_statement expression ) statement','iteration_statement',7,'p_iteration_statement','syntax.py',577),
  ('iteration_statement -> FOR ( declaration expression_statement ) statement','iteration_statement',6,'p_iteration_statement','syntax.py',578),
  ('iteration_statement -> FOR ( declaration expression_statement expression ) statement','iteration_statement',7,'p_iteration_statement','syntax.py',579),
  ('jump_statement -> GOTO IDENTIFIER ;','jump_statement',3,'p_jump_statement','syntax.py',584),
  ('jump_statement -> CONTINUE ;','jump_statement',2,'p_jump_statement','syntax.py',585),
  ('jump_statement -> BREAK ;','jump_statement',2,'p_jump_statement','syntax.py',586),
  ('jump_statement -> RETURN ;','jump_statement',2,'p_jump_statement','syntax.py',587),
  ('jump_statement -> RETURN expression ;','jump_statement',3,'p_jump_statement','syntax.py',588),
]
